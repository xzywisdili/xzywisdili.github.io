<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on xzy&#39;s blog</title>
    <link>https://xzywisdili.com/blog/</link>
    <description>Recent content in Blog on xzy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 16 Jun 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xzywisdili.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何从 NASA 下载气象数据</title>
      <link>https://xzywisdili.com/blog/%E5%A6%82%E4%BD%95%E4%BB%8E-nasa-%E4%B8%8B%E8%BD%BD%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%A6%82%E4%BD%95%E4%BB%8E-nasa-%E4%B8%8B%E8%BD%BD%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE/</guid>
      <description>如果大家有从 NASA 获取气象数据的需求的话，只要在某度搜索，一定会看到下面的这些链接：
他们可以批量获取单个城市和经纬度范围内的数据，而且代码也写得很好，但有两点问题： - 他使用的数据库是 NASA 为作物生长模型提供的气象数据，包括辐射、最大最小气温、降雨、风速，而不包括很多研究需要用到的气温和相对湿度的数据； - 他将空值用了前后5日的平均值代替，有时候可能不需要这么处理
针对以上两点问题，我只能去寻找 NASA 官网进行数据检索和下载，而 NASA 提供的数据获取工具也十分方便。 只需要打开 NASA 的 Data Access Viewer，就可以看到左边的界面：
左边的工具选项都十分明确： 1. 数据来源：就选择“SSE-Renewable Energy”就好； 2. 选择日值、年值或是气候学的平均处理； 3. 选择目标城市的经纬度即可，当然也可以使用标记工具直接在地图上点出； 4. 输入目标的起止日期； 5. 输出文件的格式
下面就是选择目标变量，我选择的是这两个，也就是气温和相对湿度：
接下来就可以提交和下载了。
至于数据的说明，可以点击这里，里面说明了数据的来源、分辨率和可获取的日期跨度。当然，如果要进行批量获取的话，可能需要高人来写相应的代码了。</description>
    </item>
    
    <item>
      <title>从电子病历提取数据</title>
      <link>https://xzywisdili.com/blog/%E4%BB%8E%E7%94%B5%E5%AD%90%E7%97%85%E5%8E%86%E6%8F%90%E5%8F%96%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E4%BB%8E%E7%94%B5%E5%AD%90%E7%97%85%E5%8E%86%E6%8F%90%E5%8F%96%E6%95%B0%E6%8D%AE/</guid>
      <description>电子病历的普及度已经很高。但如何从电子病历中提取信息还是比较令人头疼。 首先病历内容众多，从主诉到体格检查，从家族史到用药史，一份完整的病历涵盖的信息众多。 其次，病历内容是由医生按照段落填写的，很难在数以万计的病历中找到通用的标准进行提取。
当然，如果医院的病历系统是按照表格进行组织并且保存，比如我之前实习过的社区医院，将每个人的电子病历 保存为 HTML 格式，就可以使用 python 的 BeautifulSoup 进行提取。当然，如果只能得到大段 文字的话，大概需要借助人工智能里面的自然语言处理来做更多的工作的。
当然，如果任务比较简单的话，我们还是有取巧的方法的。比如要从病历记录里面提取出来身高、体重、收缩压和舒张压 等等，如：“血压114/56mmHg，体重53.3kg，胎心146次/分，宫高25cm，宫缩无。” 这样的描述中提取出舒张压：56，收缩压：114，体重：53.3 等等数据，我们可以借助正则表达式解决：
library(readxl) library(tidyr) library(stringr) data &amp;lt;- read_excel(&amp;quot;data.xlsx&amp;quot;, sheet = 1) extract_blood_pressure &amp;lt;- function(diag_str) { res &amp;lt;- str_match(diag_str, &amp;quot;血压[:： ]*[0-9]*/[0-9]*[ ]*[(mmHg)|(mmhg)]+&amp;quot;) blood_pressure &amp;lt;- unlist(str_extract_all(res[, 1], &amp;quot;[0-9]+&amp;quot;)) return(as.numeric(blood_pressure)) } extract_height &amp;lt;- function(diag_str) { res &amp;lt;- str_match(diag_str, &amp;quot;身高[:：]*[0-9]*/[0-9]*[ ]*[cC][mM]&amp;quot;) height &amp;lt;- unlist(str_extract_all(res[, 1], &amp;quot;[0-9]+&amp;quot;)) return(as.numeric(blood_pressure)) } extract_weight &amp;lt;- function(diag_str) { res &amp;lt;- str_match(diag_str, &amp;quot;体重[ ]*([0-9]{1,}[.]*[0-9]*)[ ]*[kK][gG]&amp;quot;) weight &amp;lt;- unlist(str_extract_all(res[, 1], &amp;quot;[0-9]{1,}[.</description>
    </item>
    
    <item>
      <title>新发现的 R 里关于 data.table 的一些神奇用法</title>
      <link>https://xzywisdili.com/blog/%E6%96%B0%E5%8F%91%E7%8E%B0%E7%9A%84-r-%E9%87%8C%E5%85%B3%E4%BA%8E-data.table-%E7%9A%84%E4%B8%80%E4%BA%9B%E7%A5%9E%E5%A5%87%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%96%B0%E5%8F%91%E7%8E%B0%E7%9A%84-r-%E9%87%8C%E5%85%B3%E4%BA%8E-data.table-%E7%9A%84%E4%B8%80%E4%BA%9B%E7%A5%9E%E5%A5%87%E7%94%A8%E6%B3%95/</guid>
      <description>R 语言中的 data.table 包可以理解为 data.frame 的高级版本，它比较适合适合用来处理大型数据集。
载入包并且读取一些数据，当然也可以使用 nrow 参数来决定读取多少行：
library(data.table) mydata &amp;lt;- fread(&amp;quot;some_kind_of_data.csv&amp;quot;) mydata &amp;lt;- fread(&amp;quot;some_kind_of_data.csv&amp;quot;, nrows = 10)  data.table 包提供了一个非常简洁的通用格式：mydata[i, j, by]，可以理解为：对于数据集mydata，选取子集行i,通过by分组计算j。只需要记住，i是用来在行上进行操作的（比如筛选行），j 是用来在列上进行操作的（比如选择列或者根据计算创建新列）。对比dplyr等包来说，data.table的运行速度更快。
选择列 如果只需要选择列的话，可以只代入 j，但需要记住给 i 留出位置：
mydata[, j]  首先，通过列名选择列是，是否需要打双引号是一个值得考虑的问题，因为两者各有优劣。 data.table 支持打双引号的原生 R 的做法：
data1 &amp;lt;- mydata[, c(&amp;quot;columnA&amp;quot;, &amp;quot;columnB&amp;quot;, &amp;quot;columnC&amp;quot;, &amp;quot;columnD&amp;quot;)]  但也可以使用不打双引号，这样会更方便（就好像 tidyverse 里面的 select），只不过需要用到 list：
data1 &amp;lt;- mydata[, list(columnA, columnB, columnC, columnD)]  这里，第一个小技巧就来了，我们可以使用一个点代替 list：
data1 &amp;lt;- mydata[, .(columnA, columnB, columnC, column)]  在 data.</description>
    </item>
    
    <item>
      <title>对数据进行填补</title>
      <link>https://xzywisdili.com/blog/%E5%AF%B9%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E5%A1%AB%E8%A1%A5/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%AF%B9%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E5%A1%AB%E8%A1%A5/</guid>
      <description>今天整理数据的时候，需要使用数据集 2 对数据集 1 里缺失的部分进行填补，而两者重复的部分，优先保留数据集 1 里的。
这个问题其实很简单，只需短短 2-3 行：
result &amp;lt;- data1 %&amp;gt;% left_join(data2) %&amp;gt;% mutate(value = ifelse(is.na(value.x), value.y, value.x))  但我遇到的问题稍微多一点点难度，日期的序列不是连续的话，例如数据集 1：
# date value # 2014-01-01 12 # 2014-01-03 14 # 2014-01-05 17  数据集 2：
# date value # 2014-01-02 13 # 2014-01-03 16 # 2014-01-04 15  那么希望得到的结果是：
# date value # 2014-01-01 12 # 2014-01-02 16 # 2014-01-03 14 # 2014-01-04 15 # 2014-01-05 17  我们会需要先生成一个日期的模板：</description>
    </item>
    
    <item>
      <title>毕业流程之不吐不快</title>
      <link>https://xzywisdili.com/blog/%E6%AF%95%E4%B8%9A%E6%B5%81%E7%A8%8B%E4%B9%8B%E4%B8%8D%E5%90%90%E4%B8%8D%E5%BF%AB/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%AF%95%E4%B8%9A%E6%B5%81%E7%A8%8B%E4%B9%8B%E4%B8%8D%E5%90%90%E4%B8%8D%E5%BF%AB/</guid>
      <description>终于在今年经历了毕业季，虽然坎坎坷坷，但也还算顺利，即将要从北京大学医学部毕业了。 然而在这之间走的各种流程和细节着实让人无比心累，实在是不吐不快。 明明有很大的提升空间，却还是抱残守缺，实在是与北大医学部的名校形象不太相符。
老旧的线上管理系统 难以想象，北医在 2021 年还在使用只有 IE (对，就是那个在 95 年推出，在 15 年被微软宣布要放弃的 Internet Explorer 浏览器) 才能顺利登陆并且完成各项内容提交的研究生教育管理系统。只要使用现代浏览器登陆，那必然是只能显示一片白色：
这带来的后果便是，从抢课、查成绩，到毕业申请、提交材料，任何使用苹果 mac 系统和最新版 windows 的用户都 无法顺利处理研究生期间的教务相关事务。虽然北医的生活服务平台已经更新成了现代化的新版应用，并且支持所有平台（包括手机 APP），但研究生教育管理系统迟迟不更新的原因实在不得而知。
另外，一级二级菜单混乱，反应延时，信息显示不清晰直观等问题就不在这里一一赘述。
行政人员的办公方式和态度槽点繁多 这一点应该是绝大部分毕业生的共识。毕业所需程序复杂，材料繁多，行政人员准备了一份 100 多页的 PPT 来解释说明全程。 整个文件字号大小无区分，找不到一级二级标题，各种颜色色块堆叠，实在让人无法找到重点。就从这一页上来看，目之所及 5 种颜色。想要完整清晰地领会这页的意思，应该是要花费不少时间：
如此复杂繁琐，难以理解，想必很多学生都有问题要去询问相关的行政人员。但相关人员态度敷衍，摆脸色， 有时候明明可以直接告诉你问题的答案，就是不说，让你自行去查 PPT。而到最终收材料的那天，每个人需要上交 10 多份纸质材料。没想到两个行政人员对每个同学每一份文件逐一检查，队伍直接排到了走廊尽头。整个排队流程至少要让你等待 1 个半小时！我在想，如果找一间会议室，按照要交的文件分流成列，找几个本科学生检查模板化公式化的材料，行政人员去检查更复杂的提交材料。整个过程使用共享文档登记提交进度，通过一份就在该项下面打勾，效率至少比现在这样要翻几倍。
无纸化进程还很远 无纸化办公的概念一直在普及并被实现，在现今，很多手续的办理，甚至合同的签署都可以完全在线化，电子化。 然而，整个毕业流程距离无纸化办公还太远。整个流程光各种申请表格、提交材料，就大大小小至少 20 多份。 而从论文写完，送审，到答辩，再到最终提交，光纸质版的大论文都要至少打印 13 本之多。 其实，仔细想想，里面明明有很多不需要签字或者盖章的文件完全可以移交成在线电子表格的形式进行提交。 就连导师签字的内容也可以通过在线的教务系统进行审批和签字（当然，这么老旧的教育系统当然是不具备这个功能的）。
当然，这些只是我在这所学校经历最后阶段的一点感想。可能这些问题如此难以解决和实现有其背后的原因，但我还是真心 希望这所学校可以变得更好一点。</description>
    </item>
    
    <item>
      <title>推荐且收藏的好网站</title>
      <link>https://xzywisdili.com/blog/%E6%8E%A8%E8%8D%90%E4%B8%94%E6%94%B6%E8%97%8F%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%8E%A8%E8%8D%90%E4%B8%94%E6%94%B6%E8%97%8F%E7%9A%84%E5%A5%BD%E7%BD%91%E7%AB%99/</guid>
      <description> 这篇博客计划持续更新。这里的网站或者是实用的工具，或者是收藏的实用知识，而且每一个都是我自己用过或者看过的。 其中不少还是我高频使用的，甚至域名也已经背下来了。
工具类网站  经纬度批量查询 世界范围内免费地图下载 查看时差的网站 提供代理 ip 池 各种知名品牌配色参考 电脑装机官方网站合集 快递时效查询 深度学习助力翻译网站 DeepL 在线编辑修改 GIF 图 免费在线 OCR 工具 给定地图区域的面积和最大容纳人数 我最常用的 PDF 转图片网站 上传 word 生成手写字体文档，方便打印的【萝卜工坊】 下载无水印抖音视频 一站式解决 gif 相关问题（什么都有） 免费美区 Apple ID  B站视频解析下载 看不懂的网络缩略词速查工具  学习类网站  杀手级词云 英文句式写法查询 编程通用算法可视化 和小浩学算法大全 统计类图表汇总 python3网络爬虫汇总 经济类数据图表（值得学习）  积累 Tips 科研·学术  学生在家远程学术  生活·厨房  夏日便当拯救计划 通过这些小改变，帮家中的年夜饭增添一份健康 屯粮做饭 关于洗涤、熨烫和收纳衣服的常识 工作日简单A+B煮饭 TDEE 热量计算器，得到每日摄入热量 打印机选择指南  职场·工作  写给职场新人的 PPT 演示制作指南 PPT 制作全流程要点 办公技巧分享 2020 年 7 月中华人民共和国县以上行政区划代码  其他  bilibili up主推荐  </description>
    </item>
    
    <item>
      <title>赵粤的《时尚COSMO》杂志翻译</title>
      <link>https://xzywisdili.com/blog/%E8%B5%B5%E7%B2%A4%E7%9A%84%E6%97%B6%E5%B0%9Acosmo%E6%9D%82%E5%BF%97%E7%BF%BB%E8%AF%91/</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E8%B5%B5%E7%B2%A4%E7%9A%84%E6%97%B6%E5%B0%9Acosmo%E6%9D%82%E5%BF%97%E7%BF%BB%E8%AF%91/</guid>
      <description>写在前面 A little words before 我的英语水平相当有限，但我想把赵粤接受《时尚COSMO》的采访内容分享给可能看不懂中文的海外粉丝朋友。 里面有一些专用的中文词汇，如果你不明白的话，可以点击我附上的链接查看这些词语的具体含义。 如果您发现了我翻译中的问题，或者您能提供更高质量的翻译，我非常感谢。
My English is not very good, but I want to share Zhao Yue&amp;rsquo;s interview on COSMO emagazine with overseas fans who may not be able to read Chinese. There are some special Chinese words in it. If you don&amp;rsquo;t understand, you can click the link I attached to see the specific explanation. If you find any mistakes in my translation, or if you can provide a higher quality translation, I would be very grateful.</description>
    </item>
    
    <item>
      <title>R 语言计算空间距离</title>
      <link>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E8%AE%A1%E7%AE%97%E7%A9%BA%E9%97%B4%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E8%AE%A1%E7%AE%97%E7%A9%BA%E9%97%B4%E8%B7%9D%E7%A6%BB/</guid>
      <description> 最近在研究计算真实空间两个点的距离， 比如已知 A, B 两点的经纬度坐标，计算两点之间的距离。 在 R 语言中，已经有很多大神提供的空间地理数据包，经过搜索发现最备受推崇的是 geosphere 包。
使用方法也非常简单：
library(geosphere) df &amp;lt;- data.frame(lon = c(lon1, lon2), lat=c(lat1, lat2)) distance &amp;lt;- distGeo(df[1, ], df[2, ])  得到的距离结果单位是 m。
这个包的最大优势是计算速度很快，比如这里有 geosphere 包的 distGeo 方法和 sp 包的 spDistsN1 方法的 Benchmark 对比。
附赠内容  批量转换地址为经纬度工具 百度地图经纬度拾取系统 R 语言实现 46 种距离算法  </description>
    </item>
    
    <item>
      <title>聊聊《隐秘的角落》</title>
      <link>https://xzywisdili.com/blog/%E8%81%8A%E8%81%8A%E9%9A%90%E7%A7%98%E7%9A%84%E8%A7%92%E8%90%BD/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E8%81%8A%E8%81%8A%E9%9A%90%E7%A7%98%E7%9A%84%E8%A7%92%E8%90%BD/</guid>
      <description>最近热播，也引起热议的电视剧无疑是秦昊主演的隐秘的角落。而该剧的原著小说——紫金陈的《坏小孩》也和剧一起霸占了近期的豆瓣书影音热度榜前二。我作为一个紫金陈的读者，曾经对其改编剧作《无证之罪》抱以极高的评价。于是也第一时间观看了该剧，又在今天读完了他的原著小说，心情也从原先的惊喜和期待变成了失望。
不知道谁扣给紫金陈老师“推理之王”的帽子，在我看来，推理从来都不是他作品的重心。 《谋杀官员》《长夜无明》和《无证之罪》都是开头从一个非常离奇的命案开始抓住观众的好奇心，慢慢抽丝剥茧出这则命案背后的大背景和相关人物。他笔下的世界往往更偏向于丛林世界，不乏心狠手辣的恶徒，也有心怀信仰的正义之士。 在相关人物经历了一番互相争斗，周旋和算计之后，故事达到高潮，最后通过强有力的收尾让读者们纷纷意犹未尽。 他的作品风格更像美剧《冰血暴》那样的黑色犯罪片。人物塑造和多线剧情的构建也是紫金陈老师的强项。
在《坏小孩》中，紫金陈老师作出了自己勇敢的创新，塑造了一个弑父，弑友的冷酷无情，而又狡猾的少年杀手形象。 他富有情绪又善于伪装，懂得利用，狠得下心，可以想见，这样的形象在过往的中国文学中是比较具有冒犯性，也是比较匮乏的。我们可能更多会在日本的犯罪小说中看到这样的人物形象。 但是这样的创新也带来了一些弊端，紫金陈老师把大量的笔墨用在三个小孩与张东升的日常和所谓的“周旋”上。 书中人物从一开始就和盘拖出，有些行动更是显现出了狠劲，却丧失了合理性（朱晶晶和王瑶等等段落）。 最后的日记策略和严良对戏虽说挽回了一些，但是依然能看出这本书并没有发挥出紫金陈老师完全的功力。
而到了改编剧上，只能说情况变得更糟了。明显导演和编剧不能照搬小说 9 人死亡的剧情，只好在原先的框架下修修补补。 这样一来，剧作的重心偏向了对朱朝阳和严良（剧中和书中不是一个人，书中刑警为严良，福利院溜出男生为丁浩）的家庭背景展开，尤其是朱朝阳在离异父母之间的关系展开占到了大量篇幅。 最关键的是，我们的两个小少年变成了其心也善的正面形象，所有的罪恶都留给了张东升一个人。 尤其是朱朝阳抱着濒死的父亲掩面痛哭的时候，相信读过原著的小伙伴都只能无奈地摇摇头。 而我认为，这样改编的结果只能是丢掉了原著里最精华，最亮点的部分，实在让人有些失望。
但是依然也要夸奖剧作的摄影风格，给我们呈现了一座透着海风味道的沿海小城。 里面的一些镜头也颇有想法，比如第六集结尾小船透过云层，再拉回到海上浮尸的镜头让我印象非常深刻。 三位小演员的演技也是出奇地好，都表演出了各自角色的特点，在秦昊面前也丝毫不落下风。 另外，12 集的设定也应该给个大大的好评，真心不希望国产剧动辄拍出个几十集。
接下来，紫金陈老师的《长夜难明》也会出剧版，将在今年播出。兴奋地期待的同事，也希望不要改得太多，因为那本原著涉及的剧情更加阴暗，且富有政治性。希望国产剧发展得越来越好，产出更多精品。也希望国产犯罪推理类型的小说也能打出一片天。</description>
    </item>
    
    <item>
      <title>分享几篇统计相关好文</title>
      <link>https://xzywisdili.com/blog/%E5%88%86%E4%BA%AB%E5%87%A0%E7%AF%87%E7%BB%9F%E8%AE%A1%E7%9B%B8%E5%85%B3%E5%A5%BD%E6%96%87/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%88%86%E4%BA%AB%E5%87%A0%E7%AF%87%E7%BB%9F%E8%AE%A1%E7%9B%B8%E5%85%B3%E5%A5%BD%E6%96%87/</guid>
      <description>最近在研究分段样条回归和线性混合效应模型，看到了几篇好文可以分享。
 样条回归（附 python 代码） [分段回归的拐点连续性](https://yihui.org/cn/2012/04/break-points-in-regression/ 最全使用 R 语言中lme4 包完成线性混合效应模型分析  但还是没搞懂分段线性混合效应模型，要学会接受自己的平庸和愚蠢。</description>
    </item>
    
    <item>
      <title>一个最推荐的预防流行病的方法</title>
      <link>https://xzywisdili.com/blog/%E4%B8%80%E4%B8%AA%E6%9C%80%E6%8E%A8%E8%8D%90%E7%9A%84%E9%A2%84%E9%98%B2%E6%B5%81%E8%A1%8C%E7%97%85%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E4%B8%80%E4%B8%AA%E6%9C%80%E6%8E%A8%E8%8D%90%E7%9A%84%E9%A2%84%E9%98%B2%E6%B5%81%E8%A1%8C%E7%97%85%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>这一次新冠肺炎，大众们也被迫接受了各种流行病学的知识教育。 但生活中不仅仅是新冠病毒，还有很多种其他病毒、细菌以及他们所引起的流行病。 对于大众来说，也有迫切的需求想要很好地预防流行病，或者在面对流行病时能够做到合适的处置。
我曾在疾控中心有过一段实习经历。我认为有一个最省心最简单的办法：关注你当地疾控中心的公众号！
原因有如下几点：
 健康教育也是现在疾控中心的工作内容之一，基本各地的疾控中心都会开设公众号，向大众科普一些健康教育知识。而这些预防流行病的知识都权威可靠； 流行病可能具有地域性和季节性。比如登革热和疟疾就多发生在南方的夏季，诺如病毒和流感多发于冬春季节。甚至还有一些区域有特殊的地方病。我想，不能苛求每一个公众掌握或者记得那么多种流行病的特征，易感人群和预防方式； 这些内容往往经过编排，有图片和加粗颜色字体进行要点强调，更为清晰易懂； 不会标题党，也不会有广告，你关注之后它偶尔出现在你的视线里也不会让你厌烦。  举个例子，比如我当年实习过的地区所开设的公众号「健康龙岗」（这里并非打广告嘻嘻）： 在 2019 年 12 月 16 日便更新流感高发季节的注意事项，对于易感人群，症状，个人预防与防护和接种疫苗的相关情况都介绍得相当清楚。
在 2019 年 8 月 21 日，也对深圳市出现的可能高危地带进行了公布：
传染病的流行是一种健康安全的风险，而疾控中心就是最直接也最靠谱的风控部门。 至少疾控的公众号能让你及时地了解当前的地点和时间下，你最应该做出怎样的预防措施。 衷心祝愿大家远离病魔，少生病，身体健康。</description>
    </item>
    
    <item>
      <title>大家是怎么展现疫情的</title>
      <link>https://xzywisdili.com/blog/%E5%A4%A7%E5%AE%B6%E6%98%AF%E6%80%8E%E4%B9%88%E5%B1%95%E7%8E%B0%E7%96%AB%E6%83%85%E7%9A%84/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%A4%A7%E5%AE%B6%E6%98%AF%E6%80%8E%E4%B9%88%E5%B1%95%E7%8E%B0%E7%96%AB%E6%83%85%E7%9A%84/</guid>
      <description>一个简单地汇总。
这次疫情，以丁香园为代表，微博，支付宝和腾讯跟上，都建立了自己的疫情实时播报页面。布局也都大同小异，最上面是确诊、疑似、重症、死亡和治愈五个最为重要的数字。下面是表现各个省份地区的疫情地图，和治愈情况、新增情况等的时间趋势。再下面是最新的新闻通报。
中文维基上则记录了从报道开始每一天每一个省的详细情况，这里有日期和地区尺度上最为翔实的数据和增长率，并且每一个数字都有对应的引用来源。看起来相当规范。
联合早报报道新加坡疫情时，采用了如下这种堆积的趋势图，可以更方便地观察确诊病例中不同情况人数的比例。
另一个报道新加坡疫情以面板的形式展现了所有数字、趋势。其最大的特点是在右侧显示了每一个病例，点击就可以显示病例的性别，年龄，所处地区和确诊日期等等内容。
微博上以 @江南剑心2 为代表的一批志愿者团队试图梳理每一个病例的情况，呈现一个地区亲属关系，聚集关系，是否为输入和非输入性。
希望一切早点过去。</description>
    </item>
    
    <item>
      <title>记录自己用一天时间完成的成果</title>
      <link>https://xzywisdili.com/blog/%E8%AE%B0%E5%BD%95%E8%87%AA%E5%B7%B1%E7%94%A8%E4%B8%80%E5%A4%A9%E6%97%B6%E9%97%B4%E5%AE%8C%E6%88%90%E7%9A%84%E6%88%90%E6%9E%9C/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E8%AE%B0%E5%BD%95%E8%87%AA%E5%B7%B1%E7%94%A8%E4%B8%80%E5%A4%A9%E6%97%B6%E9%97%B4%E5%AE%8C%E6%88%90%E7%9A%84%E6%88%90%E6%9E%9C/</guid>
      <description>这次最大的收获是完全过了一遍文本分析，其中包括：
 文本清洗 词频分析 绘制词云 文本分类模型  我无意在博客中写出我是怎么做的或是贴出任何代码，因为网络上有太多太多相关的教程了，文本的，视频的。 当今世界，只要不是特别冷门的知识，想学习还是特别方便的。再一次歌颂互联网。 当然，虽然只是很粗浅地了解和实践，但至少自己能在一天之内做完一整套出来，还是比较有成就感的。 于是权且把最后的成果贴在这里。</description>
    </item>
    
    <item>
      <title>新型冠状病毒</title>
      <link>https://xzywisdili.com/blog/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92/</guid>
      <description>今天，官方公布了此次「武汉肺炎」的病毒病原体检测结果， 结论是这是一种新型的冠状病毒。那么，现在广大普通群众最关注的重点应该有两个：
 该病毒是否有人传人性质？ 该病毒的来源究竟是哪里？  对于第一点，这里权且整理一下多方的观点，仅供参考：
 武汉市卫生健康委员会通报，个案发病日介于去年12月12日至12月29日，均在武汉市医疗机构隔离治疗，追踪的密切接触者也从121人增至163人，目前追踪者均无发烧等异常症状，且目前未发现明显人传人现象，也没有医护人员感染。武汉疾控中心主任李刚称，不明原因的肺炎病例数量可能还会有所增加。
香港大学感染及传染病中心总监何柏良上周在接受多家媒体采访时，将武汉近期爆发不明肺炎疫情，定义为“新型病毒”，极有可能人传人。香港中文大学医学院呼吸系统学讲座教授许树昌也表示，病毒会否人传人仍有待观察，绝不可排除相关可能性。
台湾卫生福利部疾病管制署副署长庄人祥表示，冠状病毒的潜伏期最长可达14天，1月1日至14日间若有新病例传出都可能是休市前就感染的，但若1月14日以后仍持续出现新病例，可能代表此病毒具有人传人能力；若没有新病例出现，或许可研判和动物感染源有关。
 所以，该病毒是否具有「人传人」确实还不清楚。担心会「人传人」的人可以购买 N95 口罩预防，而不担心的也至少应该持续关注相关新闻和最新进展。对于第二点，病毒的来源更是需要把第一点弄清楚之后进行更为细致的排查。因此我们还需要继续等待官方的结论。</description>
    </item>
    
    <item>
      <title>别向小徐学习</title>
      <link>https://xzywisdili.com/blog/%E5%88%AB%E5%90%91%E5%B0%8F%E5%BE%90%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%88%AB%E5%90%91%E5%B0%8F%E5%BE%90%E5%AD%A6%E4%B9%A0/</guid>
      <description>2020 年新年伊始，本应是好好鼓走干劲，大展宏图的一年。 没想到刚开年，就对自己失望至极。
今年的一门小类课，班上一共7名同学。 期末考核是每人做一份PPT概括总结这学期学过的所有内容，也就是俗称的「pre」，每人限时10分钟。 本来考核早早的一周之前就布置了下来。 本来不是一项很难的任务，但是拖延症一直让我迟迟没有开始做 PPT，甚至都没有去想。
等到昨天晚上，才告诉自己必须要开始做了。 却也是发呆到晚上10点钟。不得已，匆匆完成，赶工到早上 7 点，草草睡了 2 个小时，爬起来接着做。 终于在汇报前的一个小时，完成了。 但实在也是没有办法好好熟悉一下内容，过一遍 PPT。
没想到老天也是不给面子，直接抽中第一个上台。 讲的也是磕磕绊绊，甚至才讲到我准备的 PPT 的一半，时间就已经到了。 老师也是不留情面，让我打住。我只好灰溜溜下台。 看着别人精心准备的内容，我心里实在是羞愧得紧。
依然记得之前的一次汇报。那门课要求分组汇报选定的书目。 我当时是我们组 6 个人中唯一一个在一周内读完《论自由》的人。 之后索性就我一个人搜集，整理资料，制作 PPT，最后汇报。 我还记得很清楚，当时特别得意地用《V字仇杀队》的剧照作为我 PPT 的封面。 当时也准备了 5 个历史案例和故事，还有段子若干，娓娓道来，虽然也超时了，但并没有超时多久。
毫无疑问，现在退步太多了。 我一直以来自认为不是一个自甘堕落的人，但不可否认惰性的恶魔犹如温水煮青蛙一样把我快煮烂掉了。 虽然如此，我也始终承认，一切都还有解法。</description>
    </item>
    
    <item>
      <title>别做「十里坡剑神」</title>
      <link>https://xzywisdili.com/blog/%E5%88%AB%E5%81%9A%E5%8D%81%E9%87%8C%E5%9D%A1%E5%89%91%E7%A5%9E/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%88%AB%E5%81%9A%E5%8D%81%E9%87%8C%E5%9D%A1%E5%89%91%E7%A5%9E/</guid>
      <description>看到一条来自@peekaboo的推特：
 對李逍遙來說，一直留在十里坡，就算讓你學會劍神好了，你付出最大的代價是什麼？
才不是時間，時間其實他媽的一點都不重要。
是他將會錯過趙靈兒和林月如。
#不要留在十里坡 #上路吧去遇見你們本該遇見的人
 一是对这款 20 年前，小学玩的仙剑奇侠传的怀念；更重要的是这段话让我深有感触。 别做「十里坡剑神」，2020年，是时候上路了。</description>
    </item>
    
    <item>
      <title>2019 年度总结</title>
      <link>https://xzywisdili.com/blog/2019-%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/2019-%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</guid>
      <description>想来懒狗如我已经20天没有更新博客，对于之前每周一更的规划也已经食言了。 转眼想到博客的时候，就已经离2020年只剩3天。 不如写一个年度总结来送走离开的这一年，这次比较简单，就分为收获和遗憾两点来写。
收获 外行管理员 由于组里项目的需要，购置了一台戴尔的服务器。 而安装和配置服务器的任务就交给了我和子川同学。 从安装系统，到死活连不上网，再到买PCI网口安装， 再到和学校信息中心沟通，再到ip，域名和路由器的配置， 中间实在经历了太多的困难和挫折。 到现在还算顺利地成为了一名三流服务器管理员。 我想这是我人生中难得的经历了。
一份实习 从暑假一开始，我就去了中关村美年健康产业研究院实习。 这是美年集团成立的一家偏研究性质的公司。 没想到时光飞逝，如今已在此处实习了半年之久。 从一开始笨拙地登陆不上公司的服务器，到能独立完成了不少份数据分析和报告。 这其中，还和老师，师兄师姐们一起完成了和新华社合作的体检大数据糖尿病地图。
能认识一群厉害的老师和师兄师姐，实在是太棒了。
一份副业 从今年的 9 月份开始，我阴差阳错的开始了一份副业。 先是被拉入了一个 QQ 群，在接了一单之后，和中介菠萝君加了微信，从此就开始在日常接单了。 所谓的「接单」，其实就是给世界各地的大学生们辅导作业，或是写写代码。 每一单视难易程度的不同，大概平均就是几百元。 特别感谢菠萝君这几个月的照顾和机会，还经常吹我的彩虹屁。 但最大的问题在于，由于时差的缘故，我有时需要熬夜到很晚，所以准备在明年放缓这份副业的节奏，或者干脆另找一份副业。
开始理财 这可以算做半份遗憾，半份收获。遗憾在于这么晚才开始理财，但是收获是终于开始理财了，总比未来再开始好。 通过研究和比较，选择了一种最适合我这种普通人的理财方式。首先，准备好三个盒子：
 第一个盒子需要存放 3-6 个月满足生活开销的钱，我放在支付宝的余额宝里面； 第二个盒子则用来做长期投资，我选择的是定投指数基金； 第三个盒子则是为自己的梦想礼物存钱。  每个月有收入的时候，会先保证第一个盒子放满，然后收入的 30% 会放在第二个盒子，剩下的钱就进入了第三个盒子。 同时我也开始记账，会发现每个月花销要比我预想的多了不少。还是需要控制很多花钱的地方。
除此之外，今年我的老神舟光荣下岗，换了一台惠普地暗影精灵5，也体验了荒野大镖客2和纪元1800。感觉好爽。
遗憾 由于我看过的电影和书都在豆瓣上标记过，刚才熟了一下，发现居然 2019 年看过了 129 部电影和剧集，却只读了 14 本书。 去年和前年读书比较多的原因是，平时会有很多的通勤时间，而通勤时读书就能轻松读到很多本。 反而现在最远也只有骑车的路途的时候，倒是不会特意抽时间读书了。
另外还有好多遗憾，没能坚持背单词，没有戒掉饮料，没有好的作息，难以抵挡很多诱惑， 还没有对未来地清晰规划，还没有找到女友。
希望 2020 年能更加进步。现在要继续准备下周地结课 pre 了。</description>
    </item>
    
    <item>
      <title>工具人时刻</title>
      <link>https://xzywisdili.com/blog/%E5%B7%A5%E5%85%B7%E4%BA%BA%E6%97%B6%E5%88%BB/</link>
      <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%B7%A5%E5%85%B7%E4%BA%BA%E6%97%B6%E5%88%BB/</guid>
      <description>昨天晚上师姐速报：「师弟，帮忙算个东西，用SAS写」。
一开始对我来说可能不是什么难事，打开文件一看，陷入了深深的沉思。 用一个截图说明：
每一行代表一个研究对象，每个研究对象有 pm1 到 pm7 这 7 天所接触的 PM2.5 浓度（实际文件里面是 365 天）。 我们需要计算连续 2 天，连续 3 天，&amp;hellip; ，连续 7 天接触 PM2.5 浓度大于 35 的次数。 而且如果连续 3 天接触 PM2.5，那么只能算一次连续 3 天次数，而不能再重复计算连续 2 天次数。 换句话说，这里的每一个连续的天数都必须刚刚好好。
也许有些写程序的小伙伴会觉得非常好写，但对我来说，想要使用 SAS 解决这个问题，直觉上还是比较费劲的。 昨晚在参加选调生宣讲的时候，就一直在想。回宿舍立马坐下敲了出来。
首先，导入数据。将数据里每个值和 35 进行比较，先转换成由 0， 1 组成的数据集。 方便下一步的运算。
DATA example; infile &amp;quot;G:\04_code\PM2.5数据.csv&amp;quot; DSD MISSOVER firstobs=2; input id pm1-pm356; RUN; DATA example_35; set example; array pm {365} pm1-pm365; do i = 1 to 365; pm[i] = pm[i] &amp;gt; 35; end; drop i; RUN;  接下来，就是最关键的部分。 这里是利用 SAS 在 DATA 步读取数据的同时，插入一个循环。 这个循环长度就是 365，把每个研究对象的数据由头读到尾，在读的过程中分析数值 1 的连续情况。</description>
    </item>
    
    <item>
      <title>最近我都做了些什么</title>
      <link>https://xzywisdili.com/blog/%E6%9C%80%E8%BF%91%E6%88%91%E9%83%BD%E5%81%9A%E4%BA%86%E4%BA%9B%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%9C%80%E8%BF%91%E6%88%91%E9%83%BD%E5%81%9A%E4%BA%86%E4%BA%9B%E4%BB%80%E4%B9%88/</guid>
      <description>时间匆匆忙忙到了 2019 年的 12 月，我自己也是匆匆忙忙的事情。至于即将到来的年终总结什么的，就随缘了。 最近忙的事，既然暂时告一段落，就有必要开个博客总结一下。 所以这一篇可能内容会比较杂乱反复。
地图和 shiny 玩出新花样 在 shiny 中，选择想要绘制的美国州名，再单独绘制这一个州的情况，达到如下图的效果：
当然，在众多的美国地图文件中，如果选择边缘没有那么精细的版本，就能让渲染速度更快一点。 shiny 实在是一个好用好玩的东西。
R 也能写简单的网络爬虫？ 有一个项目是需要整理 2015 到 16 赛季 nba 球员的场均得分、场均助攻等数据。 我们可以直接在 篮球数据网站 进行爬取。 这事本来比较适合直接拿 python 跑，但出于一些原因，还是得用 R。 但意外地发现，其实也不是特别复杂，解析，xpath 查找也都不在话下，核心爬取部分也就不到 30 行代码。
library(tidyverse) library(xml2) # 得到某个球员的查询地址 # 举例，输入&amp;quot;Derrick Rose&amp;quot;，函数返回&amp;quot;/players/r/rosede01.html&amp;quot; get_player_url &amp;lt;- function(player_name) { query_url &amp;lt;- &amp;quot;https://www.basketball-reference.com/search/search.fcgi?hint=&amp;amp;search=&amp;quot; url &amp;lt;- paste0(query_url, str_replace(player_name, &amp;quot; &amp;quot;, &amp;quot;%20&amp;quot;)) player_url &amp;lt;- url %&amp;gt;% read_html() %&amp;gt;% html_nodes(xpath=&#39;//div[contains(@class, &amp;quot;search-item-url&amp;quot;)]&#39;) %&amp;gt;% html_text() return(player_url[1]) } # 得到某个球员的数据 # 举例：输入&amp;quot;Derrick Rose&amp;quot;，函数返回该球员相关的 Age, Tm等等数据 get_player_data &amp;lt;- function(player_name) { print(player_name) base_url &amp;lt;- &amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>我在 R 里画地图（二）</title>
      <link>https://xzywisdili.com/blog/%E6%88%91%E5%9C%A8-r-%E9%87%8C%E7%94%BB%E5%9C%B0%E5%9B%BE%E4%BA%8C/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%88%91%E5%9C%A8-r-%E9%87%8C%E7%94%BB%E5%9C%B0%E5%9B%BE%E4%BA%8C/</guid>
      <description>在R语言中绘制地图，尤其是可交互式的地图的另一个利器是 leaflet 包。 这次我会借着我刚刚完成的一个小项目来讲解这一内容，目标是仿制美国 CDC 官网上的一张图——是的，我们的「战场」从中国转移到了美国。
数据准备 官网上有相关数据的下载。除此之外，我们还需要美国的 shapefile 文件。 一般来说，国外的地图文件去 GADM 上下载问题就不是很大。 接下来，对于这一任务来说，可以通过 ArcGis 方便地将包含各州数据 csv 文件 join 到地图文件上。 这一步唯一要注意的就是地图文件对应字段的类型（一般来说是 Text）要与各州数据类型一致。
在这一系列的上一篇文章中，我当时将这一 merge 过程在 R 里用代码写了出来。 这两种方法都可以，如果需要批量绘制地图的话，当然还是之前代码的方法更好。
leaflet 绘制地图 leaflet 实在是绘制地图的一大利器。它不仅强大，还足够简单。 在 Youtube 上面也有太多相关的教学视频，每一讲大概2-3分钟，看起来也不累。 使用 40 行左右的代码就可以生成我们需要的地图：
library(leaflet) library(rgdal) library(sf) library(htmltools) library(htmlwidgets) USA_data &amp;lt;- st_read(&amp;quot;map2/USA_data.shp&amp;quot;) # 4个分类的配色定义 pal &amp;lt;- colorFactor( palette = c(&#39;#fff5f0&#39;, &#39;#b4b4b4&#39;, &#39;#fb6a4a&#39;, &#39;#fcbba1&#39;), domain = US$category ) # 每个州显示的标签内容 USA_data$label &amp;lt;- paste(&amp;quot;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;quot;, USA_data$NAME, &amp;quot;&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;quot;, &amp;quot;Category: &amp;quot;, USA_data$category, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, &amp;quot;Percent Change From 2016-2017: &amp;quot;, USA_data$change, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, &amp;quot;Statistically ignificant: &amp;quot;,USA_data$significan, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, &amp;quot;2016 Number: &amp;quot;, USA_data$X2016number, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, &amp;quot;2016 Rate: &amp;quot;, USA_data$X2016rate, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, &amp;quot;2017 Number: &amp;quot;, USA_data$X2017number, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, &amp;quot;2017 Rate: &amp;quot;, USA_data$X2017rate) # 绘制地图并保存 my_map &amp;lt;- leaflet(USA_data) %&amp;gt;% addPolygons(color = &amp;quot;#444444&amp;quot;, weight = 1, smoothFactor = 0.</description>
    </item>
    
    <item>
      <title>政客生活 101</title>
      <link>https://xzywisdili.com/blog/%E6%94%BF%E5%AE%A2%E7%94%9F%E6%B4%BB-101/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%94%BF%E5%AE%A2%E7%94%9F%E6%B4%BB-101/</guid>
      <description>netflix 推出了一款新剧 政客（The Politician）。 这部剧在国内并未激起太多波澜，也几乎未见有人对其讨论。得益于昨晚好友山神推荐，我打开了第一集竟没有停下来，一口气看完了第一季。
keep real 政客是瑞恩·墨菲利用高中生竞选学生会主席的环境语境之下所撰写的赤裸裸的政治讽刺剧。 很多人将此剧视为男主人公佩顿是如何打造形象，击败竞选对手，从而成功的传统励志剧。但事实并非如此。
在剧集一开始，佩顿和里弗面对委员会答辩之时，佩顿的慷慨陈词颇有政治家满分回答的感觉，但里弗却走下演讲台， 向观众娓娓道来自己曾经抑郁想要自杀的极富情感性的经历。后来剧情急转直下，里弗面对佩顿在家中开枪自杀。 到这时我才明白，原来里弗和佩顿其实就是男主人公内心的一体两面。自杀正象征着佩顿正演化为一个冷血政客。
之后剧集更是高潮迭起，仿佛一刻也不想让观众停下。学院同级生的选票成了佩顿心中唯一所关注的东西，他要为此打造形象，笼络人心。 编剧也给我们端上了几盘硬菜：与女友编造狗血爱情剧树立自己的受害者形象博取同情，拉拢假癌症患者英菲尼迪作为自己的选举搭档，在家庭内更是略施巧计击败了两个哥哥…… 在整个过程中，政治野心在佩顿心中远大于一切。在假戏真做后，他在走廊里没有回头看女友一眼。而在副主席事件中， 他更是对于英菲尼迪正在通过伤害她的身体把她伪装为癌症患者的事实丝毫不关心，反而最关心这件事的暴露是否会影响自己的仕途。 而最为经典的莫过于在本季仅为 28 分钟的第五集，以选民视角将佩顿的伪善面目展现的淋漓尽致。他真的不会关心你想要的究竟是什么，他只是满足于利益和选票的交换而已。剧情也证明了他是一个只会空谈而并非能做实事的人。且先不说上任后诸多不切实际的提案被否定，我们来看看他在竞选之中所做的两件事。 第一件是献血事件，其本质完全是为了调查英菲尼迪是否是自己竞选图中的隐患；而第二件则是禁枪法案，佩顿动用了家族的财产力量做足了表面功夫， 但可惜后面剧情中两把关键性的枪的出现又直接打了佩顿的脸。可以说，从投票前夕的佩顿身上，我们看不到一点真的东西。 他对英菲尼迪，对母亲，对身边人的所有关怀都让人忍不住打一个问号。
而剧作中也设置了两个与佩顿形成鲜明对比的角色。一个是露西饰演的艾斯垂德。导演对这个角色的设置颇为巧妙。 她的竞选动机来源于对里弗的追念和对佩顿利用里弗竞选的极度厌恶。但由于不足够强的胜负心，再加上她善良的本性，导致她看起来愚蠢而又脆弱。 而她又是一个对错分明的人，竟然将自己多年经营不义之财的父亲举报入狱。而父亲终于在被逮捕之际大声喊出对她自豪的肺腑之言。 众所周知，艾斯垂德这样一个善良的人是不堪一击的，也是难以在这种政治斗争中幸存的。另一个人便是里卡多， 他可能没什么智力，脑子还保留着一些原始冲动，外加他的日常样貌也和佩顿精心打扮过的外表完全相反，但他对英菲尼迪毫无保留的爱构成了他一切行动的动机。 事实上，正是他对于英菲尼迪那封旧录像带的曝光才真正拯救了她的前途命运。但这位迷途少女却还是对佩顿深信不疑。（我能理解编剧对于这段情节的设置，但这里显得未免有些生硬。）而艾丝翠德和里卡多的出逃性“私奔”则是剧中为数不多的人性闪光，可惜也寓意着真的东西会被所有或虚伪的现实扫地出门。
细节上的亮点 最让人印象深刻的莫过于片头，一切成绩单、布料的裁剪、家庭绊脚石的清理等等全都以微缩景观的形式呈现。 而男主先是以木偶的形式出现，经过打磨和润色，再套上衣服，形成了表面光鲜的形象也是将政治的本质揭露无疑。 政客在其中，可不就是扮演木偶的角色吗。
而让我记忆犹新的亮点则是剧中频频提到的中国普通话。我认为这一细节更多的是指代与中国交好的尼克松。而尼克松也在波兹曼的著作《娱乐至死》中被当做例子提及。 即在尼克松和肯尼迪竞选总统的时候，电视辩论首次被引入竞选。此处也是作为政客个人形象愈发影响，甚至在当选与否中起决定性因素的一个暗喻。
而最后一集结尾的设置也非常有趣。导演在为第二季铺路，需要交代本州竞选情况和政治风貌。 但这些内容并没有使用旁白或一板一眼的方式，反而很巧妙地设置了一个颇有学历的实习生，初入竞选办公室并与其上司进行对峙的一场戏完成。 所有情况交代得明明白白。其中还穿插着 windows 95 和 98 的小细节也十分有趣。
另外也可以明显地感觉到主创团队对于其中人物的服装选择和搭配也花了不少心思。比如团队里那个负责数据的酷酷的中性 boy 从头到尾就是一身淡蓝衬衫和西装裤的搭配，而爱丽丝则比第一夫人穿得还更第一夫人，而最后与佩顿渐行渐远，和其他男人订婚订婚之时，着装风格也发生了变化。
未来展望 在第一季将近结尾，可以明显看到佩顿的政治梦出现极大挫折之际，里弗以灵魂形象屡屡出现，再加上一位神秘亚裔人士的点拨之下，佩顿试图重新追回爱情。 也许在学生会主席系列事件的重创之下，佩顿的野心与梦想受到了冲击，使得他开始审视自己的内心。
上文也提到过，在结尾剧作镜头一转，通过一个实习生视角讲明了本州的政治风貌。 我想，也许正如一些豆瓣网友所预测的那样，第二季的内容就会是佩顿带领着他的竞选团队对地方议员进行冲击。 但我并不希望只看到佩顿是如何诡计多端地一路过关斩将，实现他的政治野心的。 一来，录影带，毒杀，刺杀，背叛等等戏码都已在第一季悉数登场，老调重弹只会令观众缺失惊喜感。 二来，政治场上的尔虞我诈已经被纸牌屋拍到难以超越，我想政客自己对标的也并非那样的美剧。 我更希望看到的是佩顿自我性格的补全，和竞选小队中各个成员追随佩顿的理由。 当然，我也十分期待主创团队能在第二季给观众们带来更多的剧情冲击。</description>
    </item>
    
    <item>
      <title>一周总结（9.16-9.22）</title>
      <link>https://xzywisdili.com/blog/%E4%B8%80%E5%91%A8%E6%80%BB%E7%BB%939.16-9.22/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E4%B8%80%E5%91%A8%E6%80%BB%E7%BB%939.16-9.22/</guid>
      <description>上一周如果用一个词来概括，那就是“荒废”。 感觉自己越来越难以控制自己的情绪，经常陷入到一种无来由的失落之中，脑子里胡思乱想。 这样似乎越来越难以集中精力，已经有点影响自己的工作和学习。 “生活就像巧克力”的比喻太温柔了，要我说倒像是“糖果”，打开糖果纸，你可能会吃到空气，吃到钢珠球，吃到臭蛋，吃到变质的糖果，就是不会吃到甜甜的糖。
总结一下上一周完成的工作：
 继续修改问卷小程序，这就是一项不停返工，反复打磨的工作，至于打磨的结果如何，还得等个把月； 在之前绘制地图的基础上，更新了2.0版本，而且已经迫不及待地在昨天的 post 里面写清楚了整体的绘制思路； 整个周末，完成了系里奖学金答辩审核材料的所有工作； 马马虎虎地看了一些 QGis 的资料，GIS 之路任重道远； 继续坚持健身，继续坚持早睡早起，但一直也没戒掉含糖饮料； 很遗憾还是没抽出多少时间读书，也没怎么更新博客。  这一周继续努力吧。</description>
    </item>
    
    <item>
      <title>我在 R 里画地图（一）</title>
      <link>https://xzywisdili.com/blog/%E6%88%91%E5%9C%A8-r-%E9%87%8C%E7%94%BB%E5%9C%B0%E5%9B%BE%E4%B8%80/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%88%91%E5%9C%A8-r-%E9%87%8C%E7%94%BB%E5%9C%B0%E5%9B%BE%E4%B8%80/</guid>
      <description>前言 大约一个月前，接到一个任务：绘制全国的患病率地图，就草草做了一个初版，当时还做了一个 ppt 和组里的小伙伴分享。 直到后来，才知道这种图有一个专业的称呼：choropleth maps，中文名字是分层设色图。 可以看到在 google 中检索 choropleth maps 得到的结果：
单在画图这一方面讲，其实这是一个老生常谈的话题，也有数不胜数的工具和包。但问题的关键在于：绝大多数国外提供的中国地图并不规范。 关于中国地图的规范问题，在姜大伟的知乎专栏 使用中国地图的正确姿势 中有比较翔实的介绍。我也根据此做成了其中一张幻灯片：
所以问题摆在了我们的面前：
 找到一张可供使用的规范的中国矢量地图； 根据这张地图绘制我们想要的分层设色图。  提前提醒：本文代码直接复制粘贴不能够运行，请到文末下载分享的全部程序和地图文件！
寻找标准地图 在网络上，使用最多的是一份名为 bou2_4p.shp 的地图矢量文件，这份文件来自哪里已不可考，似乎是 2012 年国家提供的 1：400 万地理信息地图，但是后来又关闭了开放。 这份地图应该是目前问题最少的地图，藏南、台湾、南海诸岛也都存在。但是时间已经来到了 2019 年，这份 12 年的地图是否那么无懈可击呢？
答案是否定的。根据 b 站 up 主“地理人_zxl”的视频 ArcGis更正老式中国基础地理信息数据错误，通过 天地图 和 bou2_4p 的比对，还是可以发现新疆的边界存在一些问题（红线为 bou2_4p，底图为标准地图）：
同时，bou2_4p 的地图也没有澳门特别行政区。通过上面视频中提供的方法，在 ArcGis 中对 bou2_4p 进行修改，就可以得到修正版本的 bou2_4p 了。 这就是我们接下来要使用的标准地图。
使用 R 绘制地图 首先要说明，在我个人使用过的工具和包里面，还是 ArcGis 这种专业 GIS 软件绘制地图最为顺滑快捷。 那为什么要使用 R 语言呢？其实还是出于以下这几个原因：
 不只我要出图，别人也要进行地图制作； 免费开源，安装便捷，上手简单； 只需改动患病率数据，运行代码就可出图  再次提醒，以下我不会贴出完整代码，只会贴出一些核心的重点代码。完整的代码会分享在文章末尾。</description>
    </item>
    
    <item>
      <title>这一周（9.9-9.15）</title>
      <link>https://xzywisdili.com/blog/%E8%BF%99%E4%B8%80%E5%91%A89.9-9.15/</link>
      <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E8%BF%99%E4%B8%80%E5%91%A89.9-9.15/</guid>
      <description>晚上在全屏看视频的时候，不小心按到了一个键，直接调用了电脑的前置摄像头， 满屏出现我的大脸，差点没把我吓到凳子下面。
过去的一周前半程处于期待中秋节的喜悦中，后半程就是一个人的中秋了。 当然也有不少值得总结的内容：
 HPV 的地区分异和 ALT 的标准制定两个研究都完成了中期的分析，两位博士老师也有别的工作，就先告一段落了 动脉粥样斑块的相关危险因素的 cox 比例回归模型上周已经跑完，这周也能完成一个收尾 本来上周就要更新的“我在R里画地图”迟迟没有写完，中秋又发现旧的地图文件出现了一点问题，亟待修正 利用每天晚上过了一遍 matplotlib 包的内容，其实这种包学起来还可以，只要记住哪种图使用哪个函数，等到用的时候查文档就能解决绝大多数问题了 继续和服务器与小程序扯皮，成功在中秋之前更新了一版新的，但中秋期间就被小伙伴又提了不少问题，还好今天都已经总结反馈 假期重温了 蝙蝠侠：黑暗骑士 和 泰坦尼克号，又看了 出租车司机 和 亢奋，让我更热爱电影艺术了 这周在读 金雀花王朝，虽然才读了一半，但英格兰王室的宫斗大戏已经让人印象深刻，小说话的叙事也属实精彩 这也是健身的第二周，感觉并没有什么变化，全身上下依然酸痛，白天也还不是很有精神 经过一周的调整作息，每天都能在12点躺在床上，但是依然不能及时睡着，经常躺到快两点才能入眠  今天看到一个观点，说人一天的注意力是有限的，而且从项目A转移到项目B上会耗散很多精力，比如现代生活的罪魁祸首即时通讯软件。 我想要试一试抵制“即时”，只在每天的几个固定时间，比如8点，12点，16点，20点才看绿色聊天软件。
另外的疑惑是精力管理，每天顶着咖啡和红牛并非长远之计，规律作息和定期锻炼是必须的，但也需要寻找到别的方法。 最后给自己提一点要求，希望能保持博客的更新，哪怕忙的时候，每天写一二百字也好。
未来的一周，加油！</description>
    </item>
    
    <item>
      <title>计程车人生</title>
      <link>https://xzywisdili.com/blog/%E8%AE%A1%E7%A8%8B%E8%BD%A6%E4%BA%BA%E7%94%9F/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E8%AE%A1%E7%A8%8B%E8%BD%A6%E4%BA%BA%E7%94%9F/</guid>
      <description>You talking to me（你在和我说话吗）？
 看过 出租车司机 之后，我本想把朋友圈的封面换成 坐在出租车内的德尼罗，但奈何绿色聊天软件对于图片糟糕的裁剪只能作罢。
本来，中秋就是团圆的最强节日符号。但是马丁・斯科塞斯和德尼罗会把你的脑子洗刷得一干二净。 很少有如此能将孤独者刻画得如此真实的影像。虽然这个世纪，每个人都声称自己或多或少有点心理问题， 但真正能对崔维斯感同身受的，恐怕少之又少。毕竟孤独症也并非千篇一律。
影片中，崔维斯坐在出租车里，与外面灯红酒绿的纽约大街形成了两个世界。 雨后闪烁着霓虹灯的街道在迈克尔・查普曼的镜头里面如同梦境一般。 有时，崔维斯只是一个观察者，一言不发地听着后排落魄的男人宣泄情绪； 有时，他又想涉足车外的世界，让这个社会留下自己的一点印记。 我倒不统一他是正义感爆棚，如同超级英雄一般试图拯救罪恶与堕落的社会， 他就是想为自己找一个出口。
说到出口，不得不提到那个老掉牙的话题：人生的目标到底是什么？ 这个问题重要到每个人都必须面对，且或早或晚给出自己的回答。 我们支持大众所支持的，反对大众所反对的，追求大众所追求的，吸收大众所吸收的。 我们连自己的人生都没有捋清楚，却不停地在为别人出谋划策； 我们顶着自私利己的蠢脑袋，却一直在为人类的大命题寻找解答； 我们假装问题已经有了答案，用美食，旅游，健身麻醉自己，甚至像 亢奋 里面吸得满嘴冒泡。 所有人都一定会找到属于自己的那个出口，有时候是工作，有时候是酒精。
在某个午后，坐在会议室里面，几个熟悉的面孔在不停的讲话。 总有一种感觉，身处一室，却相隔千里。 需要不停地问自己：我为什么在这里。 你需要不停地欺骗自己，蒙蔽自己，才能心安理得地在寻常的日子完成应该完成的工作。 所以，最令我好奇的，无非就是，崔维斯坐在竞选办公室门口的出租车里，盯着贝西看的时候， 心里到底在想什么。也许这个答案可以在马上上映的 小丑 里找到。
出租车司机这部电影会成为目前唯一一部我封存硬盘中，却再也不会打开看第二篇的电影。</description>
    </item>
    
    <item>
      <title>好一个中秋</title>
      <link>https://xzywisdili.com/blog/%E5%A5%BD%E4%B8%80%E4%B8%AA%E4%B8%AD%E7%A7%8B/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%A5%BD%E4%B8%80%E4%B8%AA%E4%B8%AD%E7%A7%8B/</guid>
      <description>悲报：2019年的我，只能做6个标准俯卧撑了。
对，没错，在中秋节这天晚上，如此适合聚会的日子，我去健身了。 还好回来的路上抬了头，没有错过月亮。 十五的月亮没有辜负这个日子，云也适时地散开。 一个人走在安静的校园里独享这一份静谧与美好，说实话有一点奢侈。 (原谅月亮被我的 ip8 拍糊了)
想起大一那年，中秋每年都是刚入学的第一个节日。 那年中秋还记忆犹新，几个高中的小伙伴一起压校园里的马路， 谈着未来和理想。之后的三年，就基本没有中秋的特殊记忆了。 去年的这个日子，我在深圳，但也恰好是要和深圳说再见的时候。 深圳是我特别喜欢的城市，绿化良好，空气清新。 当时也是月朗风清，整块圆月悬在夜空。 没想到回到北京也还能这么清楚地看到这么大的月亮。
随后，吃了月饼，还跟风画了一个月饼。椰蓉的，特别好吃。 一个美好的夜晚。</description>
    </item>
    
    <item>
      <title>一点碎碎念</title>
      <link>https://xzywisdili.com/blog/%E4%B8%80%E7%82%B9%E7%A2%8E%E7%A2%8E%E5%BF%B5/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E4%B8%80%E7%82%B9%E7%A2%8E%E7%A2%8E%E5%BF%B5/</guid>
      <description>刚刚以老年人的配速跑完了2km，不过实在太喜欢这种在雨后大口呼吸空气的感觉了。 清新的空气确实能让人头脑更加清醒，整个身体也更有活力。 也不知是不是古人也有同感，如此推崇“气”的概念。
最近工作上遇到了不少难题，让人甚是头疼。 当然在办公室，这种情绪只能隐于平静的表面之下。也只好回宿舍写篇博客排解一番了。
这份文档到底还要再改几遍？ 场景：学校项目组和外包公司
事件：我更改完一版 word 文档，微信发送给老师审核；老师通过审阅和批注改完重新发送给我。 我改好后再发送一版给外包公司。
结果：文件夹堆满了数个版本的文件，老师群里突然问这里不是之前XX版本改过了吗？就只能一版一版去翻，最后大概率死无对证。 微信电脑端记录也残缺不全，只能在手机上慢慢翻找。
办法：
 使用在线文档，最好是 google docs（又不是谁都能上 google，再说大家也没有使用共享文档的意愿） 用个全平台同步的沟通工具，哪怕邮箱吧（Telegram？好吧，又是访问限制。邮件？“好麻烦啊”）  代码确实看不懂 场景：办公室
事件：经常需要看别人的代码，又经常给别人分享代码。
结果：看到别人的纯代码，自己得先研究个一个小时才能看出个所以然来； 自己给别人分享代码，就算心里写了注释，感觉也不踏实。
办法：
 没啥说的，求求大家写一点注释吧（肯定比没有注释要舒服） 我有时自己还要额外写一个 HTML 文档来解释 其实以后可以顺便也更新到博客上面  连网页都能松鼠症 事件：自己在查资料，往往遇到一些比较好的网页，但内容想之后有时间再看，于是轻松一点收到 OneTab 里面，这下可好：
唉，不知不觉就又堆积了3百多个页面。“稍后阅读”可真是不能过度使用了。 不多说了，清理去了。</description>
    </item>
    
    <item>
      <title>再也敏感不起来</title>
      <link>https://xzywisdili.com/blog/%E5%86%8D%E4%B9%9F%E6%95%8F%E6%84%9F%E4%B8%8D%E8%B5%B7%E6%9D%A5/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%86%8D%E4%B9%9F%E6%95%8F%E6%84%9F%E4%B8%8D%E8%B5%B7%E6%9D%A5/</guid>
      <description>今天本来想总结一下这阵子使用 R 代码画地图的一些心得，但写到半夜 12 点半才写到一半，无奈今天无法更新。 眼睛打架之时开始翻看 eBooksPlan 的 Telegram群组。
eBooksPlan 是我一直很欣赏的一个社群，因为群主会稳定持续地分享很多优秀内容，但群组内一直有不讨论政治议题的群规。 今日，群里几个人又争论起了政治话题，似乎是有关“民主和言论自由”云云。管理员出面打断了讨论并封禁了两名带头的辩论者。
我对于这样的处理结果不置可否，但却也心生疑惑，于是只是凭借好奇询问：
 我知道读书群不允许讨论政治的群规。但我们如何单纯地讨论读书，而绝不涉及政治。拿“每周一书”举例，这周的选书是《过剩之地：美式富足与贫穷悖论》。我个人对这本书特别感兴趣，但是否意味着我们无法在群里探讨书中可能提及的绝大多数主题？抑或是说我们只能讨论文本层面的内容？
 就抛开那本书而言，很多生活的方方面面最后都不可避免地涉及到了经济、政治。 我们可以显而易见地发现，遵守群规的众人只能无休止地使用贴纸，争论 kindle、iPad 和纸质书阅读的利弊，或者求某本书的电子书资源。 这样的群倒也食之无味。而针对我的问题，管理员是这样回复的：
 討論主題，問題若僵持在辯，討論什麼…？ 你、我都知道，許多人對於議題來講，只一心求辯贏。誰能控制自己，好好說理…？ 如果各位都能夠控制自身的情緒，在論述之上，誰會惹得最後惡言相向？ 看過太多群組討論到最後，不是一句傻B，就是一句爹爹來著的。
 我对于群主的回复颇有几分认同，也理解了群规的道理所在，但心里感觉有一点遗憾。 我们从小的政治课都只是灌输政治观点，却从来没有培育讨论议题的能力，甚至似乎都没有被传授如何开放性地谈论问题。 网络空间里层出不穷的“辩手”一言不合就无赖式撒泼，或是脏话频出，确实让其他所有人的讨论兴致荡然无存。</description>
    </item>
    
    <item>
      <title>这一周（9.2-9.8）</title>
      <link>https://xzywisdili.com/blog/%E8%BF%99%E4%B8%80%E5%91%A89.2-9.8/</link>
      <pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E8%BF%99%E4%B8%80%E5%91%A89.2-9.8/</guid>
      <description>“开学”这个词像一层乌云笼罩了我至少十余载的青春岁月，9月1日的到来也宣示着暑假的结束，对于学生来说自然苦不堪言。 但今年我却没有太大感觉，一是毕竟已经读研，暑假也在赶工干活，开学只是偶尔去上几次专业课，其余并无不同； 二是自己也不可能给自己放假，胆敢随意抽出一周时间去外地旅游散心，甚至回家看看。
这段时间真正聊以慰藉的就是高强度关注威尼斯电影节了。作为一个DC粉，看到期待已久的电影《小丑》的各种资讯一点点放出，更是对我心理的一次次撩拨。 昨天看到消息，《小丑》拿下了这次的金狮奖，自然非常欣喜，DC终于实现了翻身。 但是仔细一想，10月份这部电影就会在北美、港澳台，乃至越南上映，而无缘中国大陆，说不定还要眼巴巴地等待两个月的资源，实在又苦不堪言。 除此之外，《婚姻故事》《我控诉》《自助洗衣店》《星际探索》也加入了我的想看片单，也算是对自己耐心的一次极大考验了。
先总结总结上一周完成了什么工作吧。
 继续和小程序、服务器、公司和项目组两方“扯头发”式扯头发，期间还经历了一次服务器的宕机，不过还好修复了； 初步完成了 HPV 的地区分异的项目研究，鲍博说要更替一下城市的相关指标，这一更又要此去经年了； 学习了一半 python 里面的 matplotlib； 继续学习 SAS 里面对于 sql 语句的使用方法； 读完了来自日本的工具书《为什么精英都是 Excel 控》，里面有一处着实好笑：说他们为了使用&amp;rdquo;F2&amp;rdquo;键检查公式不误触&amp;rdquo;F1&amp;rdquo;键弹出帮助浪费时间，把键盘上面的&amp;rdquo;F1&amp;rdquo;键都拔掉了，幸好我的电脑&amp;rdquo;F1&amp;rdquo;都是截图的快捷键； 终于看完了奈斯博的《焦渴》，也是见证了哈利再次出生入死，搏命拿下了吸血鬼罪犯； 购置了一把沙发椅，不贵也就130块，但是真还挺舒服的； 没有来由地去和几个高中同学喝了一顿酒，被曹总灌得人仰马翻；  我希望下周开始践行的几项，首先要在12点左右上床睡眠，戒掉含糖饮料（咖啡我是戒不掉了），尽量喝水，抽时间多锻炼身体。 接下来，尽量开始今早着手进行meta分析的相关分析，不要再继续拖延下去了，得加快学习节奏了。</description>
    </item>
    
    <item>
      <title>一周总结（8.26-9.1）</title>
      <link>https://xzywisdili.com/blog/%E4%B8%80%E5%91%A8%E6%80%BB%E7%BB%938.26-9.1/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E4%B8%80%E5%91%A8%E6%80%BB%E7%BB%938.26-9.1/</guid>
      <description>今年已经步入了9月，也正式宣告这个“伪暑假”的落幕，新的学期就要开始了。之所以说是“伪暑假”，着实是因为自己没给自己放假，整整一个暑假都在实习。不过整个实习安排还好，从早上9点工作到下午5点半，倒不算特别辛苦，但是每天大部分时间也算投资在工作上面了。
工作纪实 回顾这一周，似乎也没有做太多事情：
 过了一遍 python 的 numpy 和 pandas 包 和科研项目组里的服务器斗智斗勇，更新了一版小程序 整理了中国气象和污染物的数据 钻研出了绘制正规中国热力地图的画法 剩下时间都用来跑 SAS 代码了（这个 HPV 的项目已经让我整整心累了 3 周） 读了 1 本书，看了若干美剧和电影 庆祝曹老板考上清华，又欢迎马老板从东京归来 尝了一次味千家的葱油拌面（我感觉真的挺好吃的，里面的蛤挺鲜） 入手了 Sony 的 WH1000 XM3，第一次体会到了降噪耳机的强大之处  因为公司就在学校宿舍旁边，早上和晚上也就是骑车子往返，虽说方便，但倒是少了通勤时候安安静静看书的时间。这直接导致我这一周的第二本书拖拖拉拉，还没有读完。可能每天也只有在运行 SAS 代码和睡觉前能瞥上两眼，仔细想想这样的自己也是有点好笑。
审视与敲打 实话实说，每天去实习之前，我总要花费不少的时间浏览端传媒，少数派 和 自己订阅的 今日热榜。这些井喷式的新闻和八卦究竟对我们是否有所裨益这个问题我没有想明白，但是我知道的是我特别特别喜欢看，一天不看心里就会发痒。这样网站的设计者千方百计地延长我们的在线时间，我也不止一次再各处看到有人提倡“远离一切瀑布流的社交媒体”。虽然心里认同这样的理念，但我却从没有一次真正戒除过。我决心，至少完成一天额定的工作之后，再浏览各类咨询。说不定累了之后就不想看了。
在工作中比较困惑的地方在于，如何进行文件的存档管理。每天由于不停地重新跑程序，数据更新迭代也比较快。而数据又经常通过word文档和excel表格进行上交和分享。众所周知，git 是不适用于传统的word和excel的，因此就需要使用比较传统的方法：在文件名上标注作者、日期和版本号。这样下来，本地就会堆积不少的各种版本文件，实在令人难以处理。下周我要花一定的时间，哪怕抽出半天的时间好好检查和整理一下现在的文件。还要整理扔在有道云里面的各种来源的笔记。
另一点令我不满的是，现在的生活可以说几乎是 100% 的“坐立生活”。白天久坐一天之后，到了晚上也没有精力去运动，也是坐在宿舍里，这样导致我自己更没有精神。这样长久会形成一种恶性循环，加剧自己的腰背疼痛的问题。因此，我在考虑要不要购置一把更舒服的椅子或者靠垫，然后抽出时间开始运动。白天坐着不动一段时间之后一定要起身一段时间，舒展舒展。
新学期即将开学，不知道还能实习多久，不过珍惜每一天。</description>
    </item>
    
    <item>
      <title>哲瑞·雷恩：悲剧系列终章</title>
      <link>https://xzywisdili.com/blog/%E5%93%B2%E7%91%9E%E9%9B%B7%E6%81%A9%E6%82%B2%E5%89%A7%E7%B3%BB%E5%88%97%E7%BB%88%E7%AB%A0/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%93%B2%E7%91%9E%E9%9B%B7%E6%81%A9%E6%82%B2%E5%89%A7%E7%B3%BB%E5%88%97%E7%BB%88%E7%AB%A0/</guid>
      <description>很早就读过埃勒里·奎因的悲剧系列，始终以为该系列仅 X, Y, Z 三本。 没想到偶然得知还有一本《哲瑞·雷恩的最后一案》，果断花了一天时间读完。 合上书时，感受到了无比的震撼，心情难以平静。
结合起前三本，突然明白，埃勒里奎因兄弟，是想在侦探小说的领域，完成一个可以媲美莎士比亚四大悲剧文坛地位的侦探系列。 而这个系列的主角，就是哲瑞·雷恩。
 「从人们不再寻找圣杯之后，我所从事的航院便是这地球上最活力洋溢的一种。今天早晨，我六点半起床，现在吃早饭前习惯性地游两英里泳，再坐上早餐桌满足我高涨的食欲； 接着，我试戴了奎西手制的新假发，那是昨天完工的，奎西自认为是得意之作；然后我和我的导演科罗波特金、我的舞台设计师佛瑞茨联络，再一封封享受我受到的大量信函； 最后，我进入莎士比亚所在的时代，徜徉在那神奇而辉煌的古老岁月中……就这么一个平凡的日子里，你也觉得这样是很美好的一天吧？」
 在《X的悲剧》初登场的时候，哲瑞雷恩身为莎翁戏剧的演员，举手投足之间都是一个标准的老绅士。 而在探案过程中，他更像一块温润的玉石，不会咄咄逼人，也不会滔滔不绝地卖弄，更没有神经质气质。 在书中的有些场景，你甚至不会察觉到他的存在。但到每本书的结尾，他总会带来一场逻辑和理性的推理风暴，完美地折服所有在场的人物和书前的读者。
平实的语言，铺开所有线索，最后用严谨完整的逻辑收尾，更是让《X的悲剧》和《Y的悲剧》两本达到了推理小说天花板的境界。 这是我对这一系列的原有印象，直到我看到了这一本《哲瑞·雷恩的最后一案》。
此书没有令人眼前一亮的诡计和手法，关键的密码线索和闹钟线索也只是平平，但在最后十页的结尾中，系列剧情来了一次彻底的升华。 哲瑞·雷恩这位洞察世事、秉持正义的智者在面临理想和显示冲突的时候，做出了他的选择，也终结了自己的生命。 在推理之外对人性和道德的探讨，不仅赚足了读者的眼泪，也成功将这个系拔高为毋庸置疑的神作。哲瑞·雷恩也成了我最喜爱的侦探形象。
下一本读什么好呢？</description>
    </item>
    
    <item>
      <title>流行病学学习笔记（二）：队列研究（cohort study）</title>
      <link>https://xzywisdili.com/blog/%E6%B5%81%E8%A1%8C%E7%97%85%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C%E9%98%9F%E5%88%97%E7%A0%94%E7%A9%B6cohort-study/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%B5%81%E8%A1%8C%E7%97%85%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C%E9%98%9F%E5%88%97%E7%A0%94%E7%A9%B6cohort-study/</guid>
      <description>本文是流行病学学习笔记的第一篇，上课时间为 2019 年 2 月 25 日。
基本原理 队列（cohort）在流行病学中指有共同经历或有共同状态的一群人。 队列研究（Cohort study）指选定暴露于及未暴露于某因素的两组人群，随访观察一定的时间， 比较两组人群某种时间的结局（一般指疾病的发病率或死亡率），从而判断该暴露因素与发病或死亡有无关联及关联大小的一种观察性研究方法。
病因和危险因素研究是流行病学研究的重要任务，病因研究的逻辑顺序应该是先有病因存在，然后又疾病发生。 所以队列研究的特点是由因到果。
危险因素（risk factor）指能隐去某特定不良结局，或使其发生的概率增加的因子，包括个人行为等等。 危险因素的反面称为保护因素，两者统称决定因素。而这个概念在流行病学中逐渐淡化，将以前所谓的「危险因素」等概念统称为「暴露」。
暴露是研究对象接触过某种待研究的物质或具有某种研究的特征或行为，是本研究需要探讨的因素。
队列有固定队列（fixed cohort）和动态队列（dynamic cohort）之分。
动态队列由于开始时间的不统一和失访等退出队列的情况存在，所以存在不同样本对于队列的贡献无法统一衡量。 因此出现了一种新的衡量方法：「人年」，即用样本的数量乘以该样本进入队列的时间。
队列研究的历史 从 Jone Snowl 的伦敦霍乱调查开始，奠定了队列研究的雏形。 最早的队列研究一词出现是美国流行病学家 1935 年提出，但是该概念与今天含义不同。 现代队列研究作为一种流行病学研究的方法，得到广泛的应用，相关论文数量变化十年翻一番，著名的研究包括：
 doll 关于医生吸烟与肺癌的队列研究 美国佛明汉的心脏病研究 原子弹爆炸的幸存者研究  现在，「超大型队列」的概念突破了传统队列研究，摒弃了一因一果的概念。 世界最大的 50 到 55 万人超大型队列，总共有 3 个。
特点 队列研究有以下几个特点：
 观察性研究 设立对照组 由因及果，时序合理 检验暴露于疾病的因果联系科学性强  用途 队列研究可以用来：
 检验病因假设：验证某种暴露因素对某种疾病发病率或死亡率的影响，也可以同时观察某种暴露因素对人群健康的系统影响； 描述疾病的自然史：疾病的自然发展过程，包括疾病的起病（病理发生期）、潜伏期（隐伏期）、临床前期、临床期到结局的全过程； 评价预防措施效果：验证某种行为或习惯变化产生的健康影响，如戒烟或使用大量蔬菜对肠癌的影响； 药物的上市后监测：对于通过临床三期的临床试验的治疗药物，上市后，监测人群用药的安全性、有效性。  类型 队列研究根据研究方法可以分为：前瞻性队列研究、历史性队列研究、双向性队列研究。 历史性队列回顾性地收集已有的历史资料，而前瞻性队列从此时开始收集资料，双向性则是两者的结合，即向后收集历史资料，也向前收集未知资料。
前瞻性队列研究 研究对象的分组是根据目前的暴露情况，研究的结局需要随访观察一段时间才能得到。这是队列言情剧的基本形式。 该类的最大优点是可以获取相对真实可靠的资料，但是如果观察大量人群花费太大。如果疾病的潜伏期很长，则需要观察的时间很长。</description>
    </item>
    
    <item>
      <title>欲速则不达</title>
      <link>https://xzywisdili.com/blog/%E6%AC%B2%E9%80%9F%E5%88%99%E4%B8%8D%E8%BE%BE/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%AC%B2%E9%80%9F%E5%88%99%E4%B8%8D%E8%BE%BE/</guid>
      <description>越来越多的速成教程出现在我们的视野中。高中时期，贴吧就有不少关于“如何在一个月内高考数学提高XX分”这样的内容。 而之后，像这样的内容越来越多，无论是程序相关，考研，摄影，视频后期，音乐制作等等领域，都出现了诸如此类的速成教程。 似乎跟着这些内容学完，就能在短时间内摇身一变，成功升级为这一领域的大神。
我以前也经常被这样的标题所迷惑，也在网盘或收藏夹存储了大量的这类教程。最近我开始反思这一类内容的真正用处。 这类内容一般有两类。第一类是真的可以在很短时间内速成学会，比如 Markdown 的语法，使用软件剪辑视频的操作， Office 软件的一些基础用法等等。但是这种技能不可能成为一个人的核心技能，你可以学会，别人也可以在短时间内学会。 如果只衡量一项技能的时间成本，这类技能等于是零门槛的。这不代表它们是没有价值的，但我们不应该把大量时间和精力花在搜寻和学习它们上，也不能因为自己会这类技能就沾沾自喜，自我满足。
另一类则是以这样的标题作为吸睛的鸡血，引诱读者而打开链接，而实际上仍需要大量的时间精进。比如我最近学习的 Python Web 编程内容，24 节课，每节课 2 小时，按 2 倍速播放需要 1 小时，再加上课前预习内容和课后作业，每节课也得至少 1 个半小时，这样总共算下来需要 60 个小时，就算每周能抽出 6 个小时时间学习，也需要 3 个月时间才能学完（我不相信有人能一天 10 小时高强度学习）。 这样也才是刚刚入门，还需要大量时间去练习，才能够算得上掌握了一项新的技能。别的领域我想也是如此，摄影、绘画大神才出彩前付出大量的时间，考研成功的人也一定是在所有参与者中相对努力的那批人。这才是一个人的核心竞争力，也是不可替代的。
经过在医院和疾控的实习，我也明白去分类工作业务内容，识别哪些工作业务是真正需要去学习的。像贴化验单，做心电图，按照模板补充资料的内容，简单讲一遍很多人都能上手。会做这些工作什么也说明不了。我们需要放下浮躁的心，抛弃那些短时间就能速成大神的错误思想，真正思考如何去培养自己的核心技能。</description>
    </item>
    
    <item>
      <title>流行病学学习笔记（一）：描述性研究（descriptive study）</title>
      <link>https://xzywisdili.com/blog/%E6%B5%81%E8%A1%8C%E7%97%85%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%E6%8F%8F%E8%BF%B0%E6%80%A7%E7%A0%94%E7%A9%B6descriptive-study/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%B5%81%E8%A1%8C%E7%97%85%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%E6%8F%8F%E8%BF%B0%E6%80%A7%E7%A0%94%E7%A9%B6descriptive-study/</guid>
      <description>本文是流行病学学习笔记的第一篇，上课时间为 2019 年 2 月 20 日。
概述 概念 描述性研究是利用常规检测记录或通过专门调查获得数据资料，按不同地区、不同时间及不同人群特征分组， 描述人群中疾病或健康状态分布状况或暴露因素的分布情况，在此基础上进行比较分析，获得疾病三间分布特征， 进而提出病因假设和线索。
种类 描述性研究主要有以下 7 种类型：
 现况研究 病例报告 病例系列分析 个案研究 历史（常规）资料分析 随访研究 生态学研究  现况研究和生态学研究会在之后重点介绍。
病例报告（case report）是针对临床实践中某种函件疾病的单个病例或少数病例，重点关注个案特征，探究疾病背后产生的原因， 无需描述食物的集中趋势或离散程度，属于定性研究的范畴。
病例系列分析（case series analsis）是对一组病例相同疾病的临床资料进行整理、统计、分析、总结并得出结论， 一般分析临床表现特征，评价预防、治疗措施的效果，为进一步研究提供线索，并能显示某些疾病的自然进程的规律性。
个案研究（case study）运用流行病学的原理和方法，到疾病现场对新发病例的接触史、家属及周围人群的发病或健康状况 以及与发病有关的环境因素进行调查，以达到查明所研究病例的发病原因和条件，防止再发生类似疾病，控制疫情扩散及消灭疫源地的目的。个案研究的对象常为传染病病人。
历史资料分析通过回顾性调查，提取和利用历史既有资料，研究疾病的三间分布、疾病危险因素和评价疾病防治措施效果， 包括相关机构的日常工作记录、登记、各类日常报告、统计表格、疾病记录档案等等。
随访研究可分为纵向研究（longitudinal study）和前瞻性研究（prospective study）。 通过定期随访，观察疾病、健康状况或某卫生事件在一个固定人群中随着时间推移的动态变化情况。 随访研究常用于疾病自然史的研究，为该疾病的病因研究提供线索，提出或验证某些病因学假设。
特点 描述性研究的主要特点是，以观察为主要研究手段，不对研究向采取任何干预措施，仅通过观察、收集和分析相关数据， 分析和总结研究对象或事件的特点。 暴露因素不是随机分配，不设立对照组，暴露和结局的时序也无法确定，对病因推断存在一定的局限。
用途 描述性研究描述疾病或某种健康状况的分布及发生发展的规律， 包括疾病危险因素的发现、高危人群的确定、疾病患者的早发现、早诊断和早治疗、人群疾病防治策略与措施的提出、卫生政策和医疗卫生计划的制定。
另外描述性研究可以通过比较三间分布的差异，获得病因线索，提出病因假设。
现况研究 概述 概念 现况研究是对一个特定时点或时期内特定范围的人群中，对某种疾病或健康状况以及相关因素进行调查， 提供建立病因假设的依据。 调查包括描述疾病或健康状况以及相关因素在调查人群中的分布， 或按照不同因素的暴露特征或疾病状态进行比较分析。
现况研究根据观察时间为横断面研究（cross-sectional study），根据分析指标为患病率研究（prevalence study）。
研究目的与应用范围  掌握目标群体中疾病或健康状况的分布（患病率） 提供疾病病因研究的线索 确定高危人群 评价疾病监测、预防接种等防治措施的效果  研究特点与研究类型 现况研究的研究特点：</description>
    </item>
    
    <item>
      <title>我们怎么知道自己学会了？</title>
      <link>https://xzywisdili.com/blog/%E6%88%91%E4%BB%AC%E6%80%8E%E4%B9%88%E7%9F%A5%E9%81%93%E8%87%AA%E5%B7%B1%E5%AD%A6%E4%BC%9A%E4%BA%86/</link>
      <pubDate>Fri, 07 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E6%88%91%E4%BB%AC%E6%80%8E%E4%B9%88%E7%9F%A5%E9%81%93%E8%87%AA%E5%B7%B1%E5%AD%A6%E4%BC%9A%E4%BA%86/</guid>
      <description>&lt;p&gt;本科生活即将结束了。最后的一周日子里，主要在复习职业病学和精神病学，准备考试，一边又不想落下 SAS 的学习，当然还有其他杂七杂八的任务。在学习的时候，自然会想到一个问题就是：我们怎么知道自己学会了？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2018年，中国独立游戏，和他们</title>
      <link>https://xzywisdili.com/blog/2018%E5%B9%B4%E4%B8%AD%E5%9B%BD%E7%8B%AC%E7%AB%8B%E6%B8%B8%E6%88%8F%E5%92%8C%E4%BB%96%E4%BB%AC/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/2018%E5%B9%B4%E4%B8%AD%E5%9B%BD%E7%8B%AC%E7%AB%8B%E6%B8%B8%E6%88%8F%E5%92%8C%E4%BB%96%E4%BB%AC/</guid>
      <description>&lt;p&gt;强烈推荐纪录片《独行》。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简化我们的工具</title>
      <link>https://xzywisdili.com/blog/%E7%AE%80%E5%8C%96%E6%88%91%E4%BB%AC%E7%9A%84%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E7%AE%80%E5%8C%96%E6%88%91%E4%BB%AC%E7%9A%84%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;现在的大学生不像十几年前，必定是人手一台笔记本电脑（有的人甚至有两台）。只要在自习室稍微留神观察一下
专注学习的同学们，就会发现几乎 100% 的同学的电脑上停留的软件不是微软家的 powerpoint，就是 PDF 阅读器。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>卫生统计学第九周作业</title>
      <link>https://xzywisdili.com/blog/%E5%8D%AB%E7%94%9F%E7%BB%9F%E8%AE%A1%E5%AD%A6%E7%AC%AC%E4%B9%9D%E5%91%A8%E4%BD%9C%E4%B8%9A/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%8D%AB%E7%94%9F%E7%BB%9F%E8%AE%A1%E5%AD%A6%E7%AC%AC%E4%B9%9D%E5%91%A8%E4%BD%9C%E4%B8%9A/</guid>
      <description>&lt;script src=&#39;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/latest.js?config=TeX-MML-AM_CHTML&#39; async&gt;&lt;/script&gt;

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;这几天读到一个观点，论文的发表在很久之前抛弃了写在纸上的模式，现在也到了抛弃 PDF 或 Word 格式的时候了。其实一直以来，论文核心呈现的，我们所关注的都是它的内容所在。既然这样，我们为什么不能把论文呈现为 HTML 格式呢？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>再吹一波 Rmarkdown</title>
      <link>https://xzywisdili.com/blog/%E5%86%8D%E5%90%B9%E4%B8%80%E6%B3%A2-rmarkdown/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%86%8D%E5%90%B9%E4%B8%80%E6%B3%A2-rmarkdown/</guid>
      <description>&lt;p&gt;既上次写过一篇关于 &lt;a href=&#34;http://www.xzywisdili.com/post/2017/12/23/%E8%BD%BB%E6%9D%BE%E6%84%89%E5%BF%AB%E5%9C%B0%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8-rmarkdown/&#34;&gt;Rmarkdown 的安利&lt;/a&gt; 之后，我在实际使用过程中遇到了一些难题，就是关于中文的问题。如果只使用英文写作的话，完全没有问题；但是一旦使用中文，各级标题，加粗强调和引用都会变得非常奇怪。这也使我暂时搁置下了 Rmarkdown 不用。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R 语言基础入门</title>
      <link>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</guid>
      <description>&lt;p&gt;这篇《R 语言基础入门》是我在别人的博客上看到的，完成时间不会晚于 2011 年。觉得总结得相当不错，于是搬运到我的博客上。需要提到，有些链接可能已经失效。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习 R 语言里的 subset</title>
      <link>https://xzywisdili.com/blog/%E5%AD%A6%E4%B9%A0-r-%E8%AF%AD%E8%A8%80%E9%87%8C%E7%9A%84-subset/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%AD%A6%E4%B9%A0-r-%E8%AF%AD%E8%A8%80%E9%87%8C%E7%9A%84-subset/</guid>
      <description>&lt;p&gt;主要内容：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;三种 subset 操作&lt;/li&gt;
&lt;li&gt;六类 subset&lt;/li&gt;
&lt;li&gt;不同对象的的重要区别&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R 语言基础数据结构</title>
      <link>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;p&gt;介绍了 R 语言中的内置基础数据结构。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2017 读书印象</title>
      <link>https://xzywisdili.com/blog/2017-%E8%AF%BB%E4%B9%A6%E5%8D%B0%E8%B1%A1/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/2017-%E8%AF%BB%E4%B9%A6%E5%8D%B0%E8%B1%A1/</guid>
      <description>&lt;p&gt;自从 2016 年起，我逼自己养成一个习惯，每年准备一个记录阅读情况的 Excel 表格。一开始的时候，满怀热情，又是搞了图表，又是自学了 VBA 编程，然后模仿 Github 代码记录写了一个玩意儿——365 天对应 365 个小方格，每天读的页数越多，这天就越绿。当时熬夜完成的时候还特兴奋，但后来证明，没多大蛋用。当然读书记录这方法成效斐然，我在 2016 年读完了整整 40 本书！（要知道我以前一年可能翻不完一本书）&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>轻松愉快地开始使用 Rmarkdown</title>
      <link>https://xzywisdili.com/blog/%E8%BD%BB%E6%9D%BE%E6%84%89%E5%BF%AB%E5%9C%B0%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8-rmarkdown/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E8%BD%BB%E6%9D%BE%E6%84%89%E5%BF%AB%E5%9C%B0%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8-rmarkdown/</guid>
      <description>R 语言世界里的一个大杀器。
我想，在所有接触和学习 R 语言的初学者（当然包括我）眼里，有两个东西是相当酷的。一个是 shiny，可以轻松做出交互式的图表；而另一个就是 Rmarkdown 了。
现如今我想 markdown 是何物已经不用过多介绍了，它语法简洁，门槛很低，已经到了一种是个人就会的地步。那 Rmarkdown 到底是什么呢？
Rmarkdown 的官网上有这样几段介绍：
 Turn your analyses into high quality documents, reports, presentations and dashboards. Use a productive notebook interface to weave together narrative text and code to produce elegantly formatted output. Use multiple languages including R, Python, and SQL.
 简单来说，就是 Rmarkdown 能够使用 markdown 的语法，支持多种语言代码的运行和输出（R, Python 和 SQL），输出高质量的文档。
这个所谓的「高质量」的文档到底是怎么样的呢？可以这么说，有不少的人都认为 Rmarkdown 可以成为科技写作的主流：
 为什么 Markdown + R 有叫大概率成为科技写作主流</description>
    </item>
    
    <item>
      <title>dplyr 包里面必会的处理数据方法</title>
      <link>https://xzywisdili.com/blog/dplyr-%E5%8C%85%E9%87%8C%E9%9D%A2%E5%BF%85%E4%BC%9A%E7%9A%84%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/dplyr-%E5%8C%85%E9%87%8C%E9%9D%A2%E5%BF%85%E4%BC%9A%E7%9A%84%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;最近沉迷于手游，导致博客久久没有更新。其实博客就是个自己阶段学习的总结，把自己学会的东西写成博客，算是自己复习了一遍，将来忘了的时候也有的看。最近学习的很简单，就是 &lt;code&gt;dplyr&lt;/code&gt; 包里面最基础的 5 种数据处理方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R 语言的那些最最最基础</title>
      <link>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E7%9A%84%E9%82%A3%E4%BA%9B%E6%9C%80%E6%9C%80%E6%9C%80%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/r-%E8%AF%AD%E8%A8%80%E7%9A%84%E9%82%A3%E4%BA%9B%E6%9C%80%E6%9C%80%E6%9C%80%E5%9F%BA%E7%A1%80/</guid>
      <description>在 R 语言 的官方网址标题上写着「The R Project for Statistical Computing」，直接点明了 R 语言是一门主要用于统计计算的程序语言。如果你对统计感兴趣，那么就一定不能错过 R。本文只总结了 R 语言里面的那些最最最基础，想用好 R 必须要背过的内容。话不多说，赶紧上车。
基本算数 直接进行算数运算：
&amp;gt; 4 + 6 [1] 10  将值保存在对象中进行运算：
&amp;gt; x &amp;lt;- 6 &amp;gt; y &amp;lt;- 4 &amp;gt; z &amp;lt;- x + y &amp;gt; z [1] 10  显示我们已经创建的对象：
&amp;gt; ls() [1] &amp;quot;x&amp;quot; &amp;quot;y&amp;quot; &amp;quot;z&amp;quot;  清除一些对象：
&amp;gt; rm(x, y) &amp;gt; ls() [1] &amp;quot;z&amp;quot;  创建向量（vector）：
&amp;gt; z &amp;lt;- c(5, 9, 1, 0)  使用函数 c(x, y) 可以做到向量的连接：</description>
    </item>
    
    <item>
      <title>光棍节初探 TensorFlow（一）：数据集的预处理</title>
      <link>https://xzywisdili.com/blog/%E5%85%89%E6%A3%8D%E8%8A%82%E5%88%9D%E6%8E%A2-tensorflow%E4%B8%80%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E9%A2%84%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E5%85%89%E6%A3%8D%E8%8A%82%E5%88%9D%E6%8E%A2-tensorflow%E4%B8%80%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E9%A2%84%E5%A4%84%E7%90%86/</guid>
      <description>11 月 11 日这天注定对我具有了一定的意义。不是因为它是购物狂欢节或光棍节，而是因为在这一天，我第一次尝试使用 TensorFlow 搭建了一个简单的神经网络。我希望用几篇文章记录这个过程。
最近在读 Fundamentals of Deep Learning 这本书。我选择它的原因是讲解得通俗易懂，又会直白地点出重点内容。然而当我读到第三章「Implementing Neural Networks in TensorFlow」时，整个人就好像懵了一样。对于一个从来没接触过 TensorFlow 的人来说，是难以通过看代码直接理解 Graph, Session 等等这些新概念的。于是联想到程序员的思维修炼里面提到的「SQ3R 阅读法」，赶紧先放下这本书，到网上找其他关于 TensorFlow 的资料，值得推荐的是： - TensorFlow 官方文档中文版 - TF Girls「TensorFlow Tutorial」修炼指南（这老师很幽默） - youtube 地址 - bilibili 地址
没想到我居然也能一天完成了一个基础的神经网络（虽然是从下午 1 点到晚上 2 点）。现在到了「SQ3R 阅读法」中的很重要的 Recite（复述）这步———把这个过程写成文章发布到博客里。
所使用的数据集来自 The Street View House Numbers (SVHN) Dataset，这是一个关于识别街景照片中出现的数字的数据集。
读取数据 首先下载 Format 2 格式的数据，即 .mat 格式的数据。我们先在 iPython 里面探索一下数据：
In[1]: from scipy.io import loadmat as load In[2]: train_data = load(&#39;data/train_32x32.</description>
    </item>
    
    <item>
      <title>为什么要使用 LaTeX 呢？</title>
      <link>https://xzywisdili.com/blog/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8-latex-%E5%91%A2/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8-latex-%E5%91%A2/</guid>
      <description>&lt;p&gt;这个标题其实不是我对我自己的诘问。作为一个医学生，在习惯使用 LaTeX 完成日常的作业或是论文时，总会有几个同学凑上前来，好奇地问这是个什么样的写作工具。在我做一番简要的介绍后，他们或许会表露出感兴趣，或称赞的神情，然后问下一个重复了很多遍的问题：为什么要使用 LaTeX 呢？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「翻译」如何用 Python 画出像 FiveThirtyEight 那么棒的图表</title>
      <link>https://xzywisdili.com/blog/%E7%BF%BB%E8%AF%91%E5%A6%82%E4%BD%95%E7%94%A8-python-%E7%94%BB%E5%87%BA%E5%83%8F-fivethirtyeight-%E9%82%A3%E4%B9%88%E6%A3%92%E7%9A%84%E5%9B%BE%E8%A1%A8/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E7%BF%BB%E8%AF%91%E5%A6%82%E4%BD%95%E7%94%A8-python-%E7%94%BB%E5%87%BA%E5%83%8F-fivethirtyeight-%E9%82%A3%E4%B9%88%E6%A3%92%E7%9A%84%E5%9B%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;如果你经常读数据科学领域的文章的话，你可能会偶然发现 &lt;a href=&#34;http://fivethirtyeight.com&#34;&gt;FiveThirtyEight&lt;/a&gt; 上的内容，然后被他们惊艳的图表迷住。于是你自己也想制作如此出色的可视化作品，于是去 Quora 和 Reddit 上问怎么做。你收到了几个回答，但是这些回答都很模糊。你还是不知道怎么搞定这样的图表。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用 Python 解决数据结构与算法题 01</title>
      <link>https://xzywisdili.com/blog/%E7%94%A8-python-%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98-01/</link>
      <pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/%E7%94%A8-python-%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98-01/</guid>
      <description>&lt;p&gt;这是 Python 解决算法问题的第一期。我想以后每期写出三道题。本人是医学生，没有上过任何数据结构和算法课，对于解决算法题也纯属个人的课余兴趣爱好。还希望各位真正的大牛不吝赐教。我会继续坚持下去的。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://xzywisdili.com/blog/hello-world/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.com/blog/hello-world/</guid>
      <description>&lt;p&gt;在国庆放假的期间，花了大概半个晚上的时间，使用 hexo 配置好了自己的个人博客。我觉得博客是一个很好的刺激自己不断学习和保持记录习惯的帮手。我也是在身边同学里第一个开通博客的。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>