<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown on xzy&#39;s blog</title>
    <link>https://xzywisdili.github.io/tags/markdown/</link>
    <description>Recent content in Markdown on xzy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 04 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xzywisdili.github.io/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>简化我们的工具</title>
      <link>https://xzywisdili.github.io/post/2018/06/04/%E7%AE%80%E5%8C%96%E6%88%91%E4%BB%AC%E7%9A%84%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.github.io/post/2018/06/04/%E7%AE%80%E5%8C%96%E6%88%91%E4%BB%AC%E7%9A%84%E5%B7%A5%E5%85%B7/</guid>
      <description>现在的大学生不像十几年前，必定是人手一台笔记本电脑（有的人甚至有两台）。只要在自习室稍微留神观察一下 专注学习的同学们，就会发现几乎 100% 的同学的电脑上停留的软件不是微软家的 powerpoint，就是 PDF 阅读器。
这其实不是个多么令人震惊的结论。现在老师讲课都用 ppt，学生下下来复习，或者把要看的论文存在电脑里用 PDF 看， 实在是太稀松平常的事情了。但我细细想过之后，却觉得奇怪而又费解。
powerpoint 是否是制作幻灯片的不二选择？ 这个问题肯定有人笑着回答，当然是了：Prezi 制作幻灯片的拉伸旋转机制只能让观看者头晕目眩，而 keynote 软件 又是 mac OSX 系统的专属。在这个 windows 系统还是霸主的时代，大家当然更乐意看到 .pptx 格式的文件。
毫无疑问，powerpoint 软件提供了大而全的无所不包的功能，花样百出的图片和文本效果，自由自在地拖动编辑模式， 再加上看起来酷炫的动画，一切看起来那么美好。
但这是我们真正需要的吗？
纵观老师们上课使用的 ppt，无非用到的就是文本框，文字的加粗和标记，列表层级结构，添加图片和表格这几个内容。 学生们的 Presentation 也是同理。而缺乏设计训练的老师同学们往往在 powerpoint 里放纵自己的随心所欲，让 幻灯片的可读性奇差无比。使用模板带来的问题，就是难以找到一个 100% 和自己内容匹配的模板，而且又会事倍功半。
当你电脑中安装着这样一个臃肿的大家伙，只常用它提供功能的 1%，而很多按钮可能一辈子都不会碰到的时候，你为什么 还不丢掉它呢？
另一个流派就是使用 LaTeX，打开 LaTeX 开源小屋搜索 beamer，你会得到：
这些是非常赏心悦目的幻灯片文件，但关于使用 LaTeX 的痛苦感受我放在下一节里讲。
所以我觉得目前对于幻灯片的最好解决方案，就是 Markdown 制作转成 HTML 格式的幻灯片。
Markdown 最早由 Aaron Swartz 这个天才发明出来（可以看看互联网之子就知道这个人有多伟大），直到现在被无数人广泛使用， 就是因为这个标记语言有着无数优点： - 足够简单，任何人（包括没学过编程的人）可以在 5 分钟之内上手 - 提供一般人写文档需要的绝大多数功能 - 不必为版式困扰，专注于内容 - 配合合适的 css，输出相当漂亮的文档</description>
    </item>
    
    <item>
      <title>再吹一波 Rmarkdown</title>
      <link>https://xzywisdili.github.io/post/2018/04/11/%E5%86%8D%E5%90%B9%E4%B8%80%E6%B3%A2-rmarkdown/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.github.io/post/2018/04/11/%E5%86%8D%E5%90%B9%E4%B8%80%E6%B3%A2-rmarkdown/</guid>
      <description>既上次写过一篇关于 Rmarkdown 的安利 之后，我在实际使用过程中遇到了一些难题，就是关于中文的问题。如果只使用英文写作的话，完全没有问题；但是一旦使用中文，各级标题，加粗强调和引用都会变得非常奇怪。这也使我暂时搁置下了 Rmarkdown 不用。
但我多虑了，谢老师早已经提供了近乎完美的解决方案。
前提准备  安装 Rstudio：地址 安装 Rmarkdown 包：install.packages(&amp;quot;rmarkdown&amp;quot;) 安装 Pandoc：地址 安装 CTeX：在 mac 下推荐 MacTeX 或 MiKTeX  具体细节按下不表。
安装模板包 install.packages(&amp;quot;rticles&amp;quot;)  这个包中提供了 CTeX 相关模板，可以帮我们解决中文问题。在新建 Rmarkdown 中选择 「From Template」，再在其中选择「CTeX Documents」即可。
这时候默认是一篇谢老师写好的文章，我们只需要在他的基础上修改就好了，点击 knit 按钮，或者使用快捷键 ctrl + shift + k 看一看生成的 PDF 文档：
干净，整洁，看起来就像 LaTeX 写出来的！再附加 R 语言代码的强力加持，完美！
所以我今天也迫不及待使用 Rmarkdown 完成了统计学作业：
嘿嘿，虽然才学到方差分析，但我还是很骄傲，很膨胀地贴出来了。
其余资源  关于 Rmarkdown 中的 chunk option Rmarkdown 语法和常用 chunk option 速查记录 使用 Rmarkdown 制作幻灯片的相关内容 使用谢老师完成的写轮眼包制作幻灯片  人们一直希望能够简便地完成一件事，并把它做得漂亮，这也是为什么 Markdown 如此火爆的原因。因为它够简单，够美。我觉得 R 语言也是一种简单而美的编程语言。把 R 和 Markdown 结合在一起，同时能够制作出使用 LaTeX 才能排版出来的文档，实在是令人难掩激动，再写一篇博客狂吹一波。</description>
    </item>
    
    <item>
      <title>轻松愉快地开始使用 Rmarkdown</title>
      <link>https://xzywisdili.github.io/post/2017/12/23/%E8%BD%BB%E6%9D%BE%E6%84%89%E5%BF%AB%E5%9C%B0%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8-rmarkdown/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://xzywisdili.github.io/post/2017/12/23/%E8%BD%BB%E6%9D%BE%E6%84%89%E5%BF%AB%E5%9C%B0%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8-rmarkdown/</guid>
      <description>R 语言世界里的一个大杀器。
我想，在所有接触和学习 R 语言的初学者（当然包括我）眼里，有两个东西是相当酷的。一个是 shiny，可以轻松做出交互式的图表；而另一个就是 Rmarkdown 了。
现如今我想 markdown 是何物已经不用过多介绍了，它语法简洁，门槛很低，已经到了一种是个人就会的地步。那 Rmarkdown 到底是什么呢？
Rmarkdown 的官网上有这样几段介绍：
 Turn your analyses into high quality documents, reports, presentations and dashboards. Use a productive notebook interface to weave together narrative text and code to produce elegantly formatted output. Use multiple languages including R, Python, and SQL.
 简单来说，就是 Rmarkdown 能够使用 markdown 的语法，支持多种语言代码的运行和输出（R, Python 和 SQL），输出高质量的文档。
这个所谓的「高质量」的文档到底是怎么样的呢？可以这么说，有不少的人都认为 Rmarkdown 可以成为科技写作的主流：
 为什么 Markdown + R 有叫大概率成为科技写作主流</description>
    </item>
    
  </channel>
</rss>