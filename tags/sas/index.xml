<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SAS on XZY&#39;s BLOG</title>
    <link>https://www.xzywisdili.com/tags/sas/</link>
    <description>Recent content in SAS on XZY&#39;s BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 07 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.xzywisdili.com/tags/sas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ADSL 数据集的建立：练习示例</title>
      <link>https://www.xzywisdili.com/post/2023-05-08-adslexample/</link>
      <pubDate>Sun, 07 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2023-05-08-adslexample/</guid>
      <description>总结 通过一则创立 ADSL 数据集的练习示例加深对 ADSL 数据集的理解； ADSL（Subject-Level Analysis Data Set） 是 ADaM 中的一种数据集，特点是每一行是一个单独患者的记录（类似 SDTM 中的 DM 数据集），主要包括的变量有：
Demographic 相关的变量； 计划和实际的 Treatment 相关变量； 是否为 &amp;ldquo;Safety&amp;rdquo; 的患者标识 flag ADSL 的建立过程中，一般需要从 SDTM Domain 中的数个数据集合并而来：
DM 中的大部分变量 EX (Exposure)，DS (Disposition) 和其他 SDTM Domain ADSL 的结构 ADSL 的结构是一行记录代表一个患者，包括 Identifier，Demographics, Population flags, treatment, dose 和其他 subject-level 的变量。下面一一进行分析。
Identifier 变量 STUDYID, USUBJID, SUBJID, SITEID，在存在于 DM 中； Subject Demographics 变量 AGE：DM.AGE，如果分析需要 derive 一个 age 出来，需要添加 AAGE 变量； AGEU、SEX、RACE：都从 DM 中合并过来； Population Flag 变量 FASFL：全分析数据集的标识 SAFFL：Safety Population 的标识 Dose 变量 TRTSDT、TRTSDTM：分别是 Treatment 中第一次服药的日期和日期时间； TRTxxSDTF：xx一般是两位数字，代表第几个阶段，也就是第几个阶段的TRT； TRTSDTF：第一次服药的标识。 Subject-Level Trial Experience 变量 EOSDT：研究结束的日期 EOSSTT：研究结束的状态，比如取值“COMPLETED” 阅读和熟悉 ADSL 的 Spec 熟悉 ADSL 的 Spec，对于我们初学制作 ADSL 的合并数据集过程非常有帮助。</description>
    </item>
    
    <item>
      <title>CDISC 标准（五）——ADaM 标准概述</title>
      <link>https://www.xzywisdili.com/post/2023-05-02-cdiscnotes5/</link>
      <pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2023-05-02-cdiscnotes5/</guid>
      <description>总结 ADaM 标准实为了让临床试验统计分析人员梗快速、标准准确地进行统计分析和制作报表的标准； ADaM 主要分为三类数据集：ADSL，BDS 和 OCCDS； 详细梳理了三类数据集的特点以及对应的重点变量。 ADaM 数据集是做什么用的？ ADaM，Analysis Data Model，顾名思义，为了更加方便、标准且准确地进行统计分析，输出相关统计图表的标准模型。
临床实验的流程包括：实验设计，得到原始数据 → 经过 SDTM 标准化得到标准数据 → 将 SDTM 标准数据转化为 ADaM 标准数据 → 使用 ADaM 数据集生成统计图表 → 撰写药物上市申请文档。
在这个工作流程中：
SDTM 标准更偏向于数据标准化； 不同实验的数据集，结构内容和变量基本大部分相同； 如果直接从 SDTM 数据集创建统计图表，需要增加大量计算语句，非常冗杂并且容易出错； ADaM 标准更偏向于数据的可分析性； 数据集的变量可以根据实验的不同进行调整，更加灵活； 更加方便快捷、标准、准确地编写统计图表生成的语句。 跟 SDTM IG 文件类似，ADaM 也有对应的 IG（Implementation Guide） 文件，在 CDISC 的官网就可以找到。
ADaM 有五大基础原则 清晰且无歧义，Clearly adn unambiguously，有标准则需要与标准一致，如果没有标准就需要描述清晰； 可追溯性，Traceability，每个变量，每条记录的来源，都必须能从对应的 SDTM 数据集中找到； 能够被常用的统计软件 SAS 使用； 必须具备 metadata 元数据，即必须把 ADaM 中每个变量的意义放在一个元数据文件中； 即分析性 analysis-ready，使用最少的编程工作就可以完成分析任务；ADaM 数据可以只包含分析所需要的数据，如果收集了一些原始数据并不会用于分析中，那么就不需要纳入 ADaM 数据集中。 可追溯性 可追溯性非常重要，它要求所有数据有依可查，而不是凭空产生。这样可以方便分析人员和审阅者查看数据的产生过程，排除可能存在的异常数据。可追溯性分为以下两点：</description>
    </item>
    
    <item>
      <title>CDISC 标准（四）——SDTM 数据集详细分类</title>
      <link>https://www.xzywisdili.com/post/2023-05-02-cdiscnotes4/</link>
      <pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2023-05-02-cdiscnotes4/</guid>
      <description>总结 本笔记的主要内容：
介绍 SDTM 标准下的七个大类别，以及主要包括的数据集； 梳理两个最重要的数据集：AE（副作用数据集）和 LB（实验室检测结果数据集）。 SDTM 的全称是 SDTM Standard dataset tabulation model，即实验数据标准化的模型，在之前的笔记中有一个概述的介绍。SDTM 标准力图能够尽可能覆盖在临床实验进行过程中所需要收集到的所有数据和相关信息，因此也详细地设计了各种不同分类的大类别和数据集。
在这个分类下，总共包括七个大类别和 44 个数据集。每一种数据集都属于唯一一个类别。七个大类别“SIFEFTR”：
特殊目的类：Special Purpose 干涉类：Intervention 发现类：Findings 发现相关类：Findings About 事件类：Events 实验设计类：Study Trial 关系类：Relationship 下面分门别类介绍每一种类型。
特殊目的类 Special Purpose 特殊目的类：包括和实验参与者本人相关的数据，无法归类到其他类别。主要包括以下几个数据集：
CO：评价数据集，Comments**，医生手写或者补充的文本备注和记录，需要与其他数据集相连接；如果手写的记录超过 CDISC 规定的最长值长度 200 个字符，就需要创建新的 COVAL1，COVAL2 变量保存字符，以此类推，每个变量容纳 200 个字符； DM：人口统计学，Demographics，用于保存患者的基础信息，比如患者编号、性别、国籍、种族、实验开始时间等等，在之前的内容中有所记录； SV：患者来访数据，Subject Visit SE，患者时期元素，Subject Element 一个患者在整个临床实验过程中需要来访多次。一般是从 Screen 和纳入开始，之后的来访依次是基线，第一次来访，第二次来访等，直到实验结束。在服用药物过后，因为药物在人体内有残留期，也需要几次患者来访，来观察是否具有副作用和其他治疗效果。 患者来访的时间数据都需要记录在 SV 数据集中。每个患者在实验过程中经历的每个时期和元素的时间信息，这些数据被放在 SE 中。 干涉类 Interventions 干涉类主要包括对患者有影响的行为的相关数据，包括以下几个数据集：
CM：伴随用药 Concomitant and prior medications 参加临床实验的患者，如果有其他疾病，需要服用已经上市的药物，就需要在数据集中记录伴随用药的相关信息；如果是和癌症相关的临床实验，可能需要让受试者服用一种统计的抗癌药物，再服用待实验的药物，那么这个统一服用的药物也需要放置在 CM 数据集中； CM 数据集存放患者服用的其他药物（非本实验药物）的名称、类别、剂量、计量单位、频率、药物类型（胶囊/饮剂）等数据； EX：实验用药 Exposure 实验计划中药物的使用情况； 根据实验设计来确定，核心变量包括 EXTRT（药物的名称），EXDOSE（药物的剂量），EXDOSU（药物剂量的单位），EXDOSFRQ（药物按此剂量服用的频率） 和 EXDOSFRM（药物的形式，液体/胶囊/含服片）； EC：实际实验用药 Exposure as Collected 实际中**药物的使用情况 由 ECOCCUR 变量指定该次是否服药，ECDOSE 记录剂量，ECDOSU 记录剂量单位； EC 和 EX 数据集的结构基本相同，实际分析使用 EX 数据集，因为根据实验设计而来的 PR：过程 Procedures 患者治疗和诊断相关的过程 比如患者参与心血管相关的临床实验，中间去口腔科诊断并拔了智齿，这个过程无法判断是否与临床实验相关，所以也要记录下来。 核心变量：PRTRT，记录做的手术名称 PRSTDTC，PRENDTC，PRSTDY，PRENDY 分别对应手术开始的日期和结束的日期，以及对应的天数； SU：物质使用 Substance Use 其他非药物的物质的使用情况，比如最常见的咖啡（含有咖啡因），吸烟、喝酒； 主要包括以下几个变量：SUTRT（使用物质的名称，包括 CIGARETTES，COFFEE）、SUCAT（使用物质所属的大类）、SUDOSE（这些物质使用的数量）、SUDOSEU（使用物质的数量单位）、SUDOSFRQ（使用物质的频率）、SUSTAT，SUREASND（数值没有被记录和没有记录的原因） 事件类 Events 事件类，代表计划之外的事件，总共包括 6 个数据集：</description>
    </item>
    
    <item>
      <title>SAS 几个重要概念辨析</title>
      <link>https://www.xzywisdili.com/post/2023-05-01-sasnotes1/</link>
      <pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2023-05-01-sasnotes1/</guid>
      <description>进行变量类型转换，用 input 还是 put 在 SAS 编程过程中，往往会遇到需要转换变量的需求。而转换变量，往往需要考虑使用 INPUT 还是 PUT。那么这时候就要想想几个变量转换中的几个关键点：
源变量是字符型还是数值型？ 如果源变量是字符型，那么值是字符还是数字？ 想要转换后的变量是字符型还是数值型？ 那么，根据这三个问题的答案，就可以推出是使用 INPUT 还是 PUT，他们分别有以下几个特点：
PUT() 永远创建字符型变量； PUT() 中的格式参数必须和源变量类型匹配； INPUT() 的源变量必须为字符型变量； INPUT() 可以根据指定的格式，选择创建字符型或者数值型变量。 下面是几个例子：
需求 代码 源变量类型 源变量值 返回变量类型 返回变量值 PUT 将字符变量转换为字符变量 PUT(name, $10.); 字符型 &amp;lsquo;Richard&amp;rsquo; 永远是字符型 &amp;lsquo;Richard &#39; PUT 将数值变量转换为字符变量 PUT(age, 4.); 数值型 30 永远是字符型 &amp;rsquo; 30&amp;rsquo; PUT 将自定义格式转换为字符变量 PUT(name, $nickname.); 字符型 &amp;lsquo;Richard&amp;rsquo; 永远是字符型 &amp;lsquo;Rick&amp;rsquo; INPUT 将值为数字的字符型变量转换为数值变量 INPUT(agechar, 4.); 永远是字符型 &amp;lsquo;30&amp;rsquo; 数值型 30 INPUT 将值为数字的字符型变量转换为字符变量 INPUT(agechar, $4.); 永远是字符型 &amp;lsquo;30&amp;rsquo; 字符型 &amp;rsquo; 30&#39; 都用于分类变量：class 与 by 的辨析 SAS中的 BY 语句和 CLASS 语句都允许指定一个或多个分类变量。主要区别在于：</description>
    </item>
    
    <item>
      <title>CDISC 标准（三）——SDTM 标准初试</title>
      <link>https://www.xzywisdili.com/post/2023-04-30-cdiscnote3/</link>
      <pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2023-04-30-cdiscnote3/</guid>
      <description>总结 第一次尝试仔细阅读 SDTM IG 文件中的一个 domain 变量信息； 通过 SAS 代码初试按照 SDTM 标准输出标准化的数据集。 本章要开始使用 SAS，并结合 SDTM 标准，看看如何让目标数据集符合 IG 文件里面的标准。
使用的目标 Domain 是 IG 文件 64-65 页介绍的，最重要的 Domain 之一—— DM Domain，具体变量说明表如下：
DM 是 Demographics 的缩写，代表人口统计学信息。所有人类参与的临床实验都需要 DM Domain，内容包括实验参与者的年龄、性别、种族、国籍、实验分组、实验开始日期和结束日期等等等等数据。
DM 数据集往往是接手某个项目最先阅读的数据集，可以查看和了解参与实验的患者的所有信息。在临床实验中，有几个患者参与，那么 DM 数据集中就需要包括几条观测数据。比如，有 10 名患者参与了临床实验，收集了原始数据，那么 DM Domain 中就应该包括 5 条观测。
接下来就是初学 SDTM 标准的学习方法：仔细阅读 SDTM IG 文件中对于每一条变量的说明，并且按照对应的要求，在 SAS 中处理数据集。处理过程中，需要注意以下几个重点：
注意每一条变量的 Type，字符型或者数值型，一定要在 SAS 中按照对应的格式存储，不符合的需要进行转换（INPUT 或者 PUT）； 日期型的变量一定要注意按照规定的 ISO8601 格式； 变量顺序和变量的 Label 要按照表中规定的要求； 多多检查。 从 SDTM IG 表慢慢看起：</description>
    </item>
    
    <item>
      <title>CDISC 标准（二）——SDTM 标准概述</title>
      <link>https://www.xzywisdili.com/post/2023-04-29-cdiscnote2/</link>
      <pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2023-04-29-cdiscnote2/</guid>
      <description>总结 介绍了 SDTM 和 IG 文件的基本概念； 通过阅读 SDTM IG 文件，了解 Domain 和 Variable 的各种信息； 重点是 Variable 的五种分类：Identifier, Topic, Qualifier, Timing, Rule。 SDTM 的基本概念 SDTM（Study Data Tabulation Model）是一个服务于临床实验的标准数据指标模型，也是被业界和 FDA 广泛采用的标准。它规定了在临床实验中，原始数据收集之后的标准化的呈现方式。可能不同种类的药物，在实验中收集的数据样式是不一样的，但是经过 SDTM 标准化之后，相同类别的数据一定是相同的。
标准化的好处是，可以更好地服务于药物开发全链条中的各方人员，大大降低了沟通成本，提高审查部门的审核效率。经过多年的数次更新，SDTM 标准已经几乎可以涵盖所有类型的临床实验数据格式。
而 SDTM IG 文件（SDTM Implementation Guide）中就详细说明了所有 SDTM 标准化数据的方方面面的信息。想要了解 SDTM，就必须要从阅读 SDTM IG 文件开始。
从阅读 SDTM IG 文件开始 SDTM IG 文件可以从 CDISC 组织的官网中免费获得。官网下载得到的是英文版本，虽然民间存在个人翻译的中文版本，但还是推荐采用原汁原味的英文版本进行阅读。同时，官网还提供了 PDF 和 HTML 的多种格式，方便阅读。
Domain 域 在第二章 Fundamentals of the SDTM 中，向我们介绍了 SDTM 标准中的基础元素：Domain（域）。每个 Domain 可以理解为围绕一个主题，相关的所有观测和变量组成的数据集，其中有一些基础的通用要求：</description>
    </item>
    
    <item>
      <title>（2022年11月过）SAS Advance 考试最新完全攻略！</title>
      <link>https://www.xzywisdili.com/post/2022-11-08-sasadvance/</link>
      <pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2022-11-08-sasadvance/</guid>
      <description>今天终于通过了 SAS Advance 的考试。有一些最新的备考和考试过程的经验可以跟大家分享一下。 这篇攻略我会从两个方面来说，分别是备考篇和考试篇。
备考篇 SAS Advance 的考试并不难，主要是考察三个部分：Proc SQL 语句，SAS 中Macro宏的应用以及一些进阶编程技巧。 只要用我下面列出的备考材料复习，就完全不用担心过不了。所有材料的分享链接在最后。
官方教材《SAS Certified Professional Prep Guide: Advanced Programming Using SAS 9.4》 注意，一定一定不要用老版的教材，老版的教材有 800 多页，看完太费时间，而且还有大部分内容不会考察，还有部分要考察的内容没有涉及。所以一定要认准总共 400 余页的新版教材。另外，可能在某亩三分地或者其他论坛里分享的教材版本是乱码的，里面的代码片段和图片也有很多缺失。我找到了完整的电子版书籍，内容是完整的，分享链接也在下面。
论坛大神 Mike Q 总结的 20 道 Lab 试题 Lab 试题，即需要你在考场上实机编写代码进行解答，具体情况是：
左侧显示题目信息和要求； 右侧是一个远程编程环境窗口，供你写代码使用； 备考时候可以提前看一下 SAS 官方提供的讲解视频，熟悉操作； 实机操作的题目不用担心，不会很难，题型基本上都涵盖在了上面的 20 道 Lab 机经中，考前一定要至少刷一遍！最好自己亲手敲一遍代码，更加熟悉。
论坛大神总结 63+20 题 这部分主要针对的是考试中出现的选择题，63+20 题版本已经可以涵盖绝大部分的考试范围了。我分享的版本除了题目，还有详细的题目答案解析，总共内容不到 100 页，考前至少刷一遍就好。另外需要注意，正式考试中还覆盖了正则表达式（Perl Regular Expression）的题目，在刷题之余还需要翻看一下教材。
备考总结 总结一下怎么备考：
有富余时间建议过一遍教材（包括课后习题），没有时间的话可以跳过直接刷题； 一定过一遍 Lab 20 题，至少亲手敲一遍代码； 一定过一遍 63+20 题，可以看答案过一遍之后，挡住答案自己做一遍。 考试篇 考试篇我会分为线上考试和线下考试分别讲讲是怎么样的（对，我很悲催地两种都经历过）。
无论是线上还是线下都可以在官网进行报名；按照步骤注册登录，然后选择自己想要参加的考试（本文中是 SAS Advance Programming - Performance Based）就行了。之后在选择考试方式（线下 or 线下），预约时间，进行付费就可以了。付费需要使用海外信用卡支付 180 美元。</description>
    </item>
    
    <item>
      <title>工具人时刻</title>
      <link>https://www.xzywisdili.com/post/2019-12-09-smalltool/</link>
      <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2019-12-09-smalltool/</guid>
      <description>昨天晚上师姐速报：「师弟，帮忙算个东西，用SAS写」。
一开始对我来说可能不是什么难事，打开文件一看，陷入了深深的沉思。 用一个截图说明：
每一行代表一个研究对象，每个研究对象有 pm1 到 pm7 这 7 天所接触的 PM2.5 浓度（实际文件里面是 365 天）。 我们需要计算连续 2 天，连续 3 天，&amp;hellip; ，连续 7 天接触 PM2.5 浓度大于 35 的次数。 而且如果连续 3 天接触 PM2.5，那么只能算一次连续 3 天次数，而不能再重复计算连续 2 天次数。 换句话说，这里的每一个连续的天数都必须刚刚好好。
也许有些写程序的小伙伴会觉得非常好写，但对我来说，想要使用 SAS 解决这个问题，直觉上还是比较费劲的。 昨晚在参加选调生宣讲的时候，就一直在想。回宿舍立马坐下敲了出来。
首先，导入数据。将数据里每个值和 35 进行比较，先转换成由 0， 1 组成的数据集。 方便下一步的运算。
DATA example; infile &amp;#34;G:\04_code\PM2.5数据.csv&amp;#34; DSD MISSOVER firstobs=2; input id pm1-pm356; RUN; DATA example_35; set example; array pm {365} pm1-pm365; do i = 1 to 365; pm[i] = pm[i] &amp;gt; 35; end; drop i; RUN; 接下来，就是最关键的部分。 这里是利用 SAS 在 DATA 步读取数据的同时，插入一个循环。 这个循环长度就是 365，把每个研究对象的数据由头读到尾，在读的过程中分析数值 1 的连续情况。</description>
    </item>
    
    <item>
      <title>我们怎么知道自己学会了？</title>
      <link>https://www.xzywisdili.com/post/2018-12-8-learnthoughts/</link>
      <pubDate>Fri, 07 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.xzywisdili.com/post/2018-12-8-learnthoughts/</guid>
      <description>&lt;p&gt;本科生活即将结束了。最后的一周日子里，主要在复习职业病学和精神病学，准备考试，一边又不想落下 SAS 的学习，当然还有其他杂七杂八的任务。在学习的时候，自然会想到一个问题就是：我们怎么知道自己学会了？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
